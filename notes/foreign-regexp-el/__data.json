{"type":"data","nodes":[null,{"type":"data","data":[{"entity":1},{"name":2,"nameSegmented":3,"kind":7,"urlPath":8,"historyURL":9,"lastModified":10,"attributes":11,"tags":16,"body":20,"headline":21,"links":22,"isEmpty":57},"Emacs: re-builder + foreign-regexp.elでたのしい正規表現",[4,5,6],"Emacs: re-builder + foreign-regexp.elで","たのしい","正規表現","note","/notes/foreign-regexp-el","https://github.com/kissge/yo.eki.do/commits/master/notes/foreign-regexp-el.md",["Date","2022-06-11T07:52:23.000Z"],{"from":12,"title":2,"date":13,"tags":14},"wordpress",["Date","2014-12-19T23:30:53.000Z"],[15],"アドベントカレンダー",[17],{"name":15,"kind":18,"urlPath":19},"tag","/mono/%E3%82%A2%E3%83%89%E3%83%99%E3%83%B3%E3%83%88%E3%82%AB%E3%83%AC%E3%83%B3%E3%83%80%E3%83%BC","\u003Cp>この記事は\u003Ca href=\"http://qiita.com/advent-calendar/2014/emacs\">Emacs Advent Calendar 2014\u003C/a>の第20日目の記事として書かれました．第19日目はkawabata@githubさんによる「\u003Ca href=\"/mono/Emacs\" class=\"monolog-link\"  title=\"Emacs\">Emacs\u003C/a> Lispの汎変数（とその他）」でした．第21日目はsanryuuさんによる自作ツールの紹介の予定です．\u003C/p>\n\u003C!--more-->\n\n\u003Ch3 id=\"イントロダクション\">イントロダクション\u003C/h3>\n\u003Cp>こんばんは．\u003Ca href=\"/mono/Emacs\" class=\"monolog-link\"  title=\"Emacs\">Emacs\u003C/a>のお話をします．わたし自身あまり\u003Ca href=\"/mono/Emacs\" class=\"monolog-link\"  title=\"Emacs\">Emacs\u003C/a>のさまざまな機能を使いこなせていないのでそういう読者を想定して書きます．\u003C/p>\n\u003Cp>\u003Ca href=\"/mono/Emacs\" class=\"monolog-link\"  title=\"Emacs\">Emacs\u003C/a>に限らずエディタで何らかのファイルを編集していると，たいていの場合正規表現による検索や置換が欲しくなります．そして\u003Ca href=\"/mono/Emacs\" class=\"monolog-link\"  title=\"Emacs\">Emacs\u003C/a>には\u003Ccode>re-builder\u003C/code>という素晴らしい機能があります．\u003C/p>\n\u003Cimg src=\"/images/uploads/2014/12/Screen-Shot-2014-12-19-at-9.44.09-PM.png\" width=\"582\" height=\"533\" class=\"alignnone size-full wp-image-184\" data-wp-pid=\"184\" />\n\n\u003Cp>これは正規表現クエリを書きながら，リアルタイムでそれにマッチする部分を確認出来るという便利なツールです．しかし，\u003Ca href=\"/mono/Emacs\" class=\"monolog-link\"  title=\"Emacs\">Emacs\u003C/a>の正規表現は御存知の通り少し面倒くさいです．というか結構面倒くさいです．上のクエリは\u003C/p>\n\u003Cpre>\u003Ccode>&quot;^\\\\s-+&lt;li&gt;\\\\(.*\\\\)&lt;/li&gt;&quot;\n\u003C/code>\u003C/pre>\n\u003Cp>ですが，これだけの長さの中にバックスラッシュが6回も出て来ます．もちろん\u003Ca href=\"/mono/Emacs\" class=\"monolog-link\"  title=\"Emacs\">Emacs\u003C/a> Lispを書くときにはコード中に\u003Ca href=\"/mono/Emacs\" class=\"monolog-link\"  title=\"Emacs\">Emacs\u003C/a>の正規表現を書くはめになるわけですがあまり気の進む作業ではありません（個人の感想です）．たいてい一発でうまくいかなくて適当にバックスラッシュを足したり引いたりするはめになります（個人の感想です）．ここでPerl互換の正規表現が使えたら便利なわけです（若い方は耳慣れないかもしれませんがPerl互換のというのは正規表現につく枕詞です）．そんな流れで今日紹介するのがforeign-regexp.elです．\u003C/p>\n\u003Ch3 id=\"foreign-regexpelの導入\">foreign-regexp.elの導入\u003C/h3>\n\u003Cp>というわけでforeign-regexp.elを導入してみましょう．\u003Ca href=\"https://github.com/k-talo/foreign-regexp.el\">https://github.com/k-talo/foreign-regexp.el\u003C/a>からforeign-regexp.elを入手し，パスの通った場所におきます（動かすだけなら他のファイルは無くとも問題ないようです）．そして\u003Ccode>.emacs\u003C/code>に\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-lisp\">(\u003Cspan class=\"hljs-name\">require\u003C/span> &#x27;foreign-regexp)\n\n(\u003Cspan class=\"hljs-name\">custom-set-variables\u003C/span>\n&#x27;(foreign-regexp/regexp-type &#x27;perl) \u003Cspan class=\"hljs-comment\">;; Choose your taste of foreign regexp\u003C/span>\n                                    \u003Cspan class=\"hljs-comment\">;; from &#x27;perl, &#x27;ruby or &#x27;javascript.\u003C/span>\n&#x27;(reb-re-syntax &#x27;foreign-regexp))   \u003Cspan class=\"hljs-comment\">;; Tell re-builder to use foreign regex.\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Cp>と追加します．このコードで，foreign-regexp.elで使う正規表現をPerl, Ruby, JavaScript (node.js)から選んで指定し，re-builderで用いる正規表現も変更しています．\u003Ccode>autoload\u003C/code>で書きたい場合は\u003Ccode>re-builder\u003C/code>か\u003Ccode>foreign-regexp/re-builder/query-replace-on-target-buffer\u003C/code>に張ればいいでしょう（私はそうしています）．\u003C/p>\n\u003Cp>これだけです．簡単ですね．\u003C/p>\n\u003Ch3 id=\"つかってみる\">つかってみる\u003C/h3>\n\u003Cp>あとはそんなに覚えるべきキーバインドも多くはないのですが……一応ひと通り使ってみましょう．まず\u003Ckbd>M-s M-l\u003C/kbd>で\u003Ccode>re-builder\u003C/code>を呼び出します．キャンセルして終了するときは\u003Ckbd>C-c C-q\u003C/kbd>です．そして \u003Ccode>*RE-Builder*\u003C/code> バッファで置換前にマッチする正規表現を入力します．\u003C/p>\n\u003Cimg src=\"/images/uploads/2014/12/regex-fig-02.gif\" width=\"555\" height=\"525\" class=\"alignnone size-full wp-image-192\" data-wp-pid=\"192\" />\n\n\u003Cp>完成したらこのままこれを置換クエリに持って行きましょう．このバッファがアクティブなまま\u003Ccode>foreign-regexp/re-builder/query-replace-on-target-buffer\u003C/code>を呼び出すと置換クエリにそのまま渡せます．キーバインドは\u003Ckbd>M-s M-%\u003C/kbd>です．\u003C/p>\n\u003Cimg src=\"/images/uploads/2014/12/regex-fig-03.gif\" width=\"555\" height=\"525\" class=\"alignnone size-full wp-image-194\" data-wp-pid=\"194\" />\n\n\u003Cp>今はPerlの正規表現なので\u003Ca href=\"https://github.com/vim-jp/vimdoc-ja/issues/57#issuecomment-5841203\">後方参照（前方参照）\u003C/a>も\u003Ccode>$1\u003C/code>でしたね．あとは\u003Ckbd>y\u003C/kbd>または\u003Ckbd>n\u003C/kbd>で一つ一つの置換候補を実際に置き換えるか決定します．一括で全て置き換える場合は\u003Ckbd>!\u003C/kbd>です．\u003C/p>\n\u003Cimg src=\"/images/uploads/2014/12/regex-fig-04.gif\" width=\"555\" height=\"525\" class=\"alignnone size-full wp-image-195\" data-wp-pid=\"195\" />\n\n\u003Cp>簡単でしたね．嘆くらくは\u003Ca href=\"/mono/Emacs\" class=\"monolog-link\"  title=\"Emacs\">Emacs\u003C/a> 24.4でforeign-regexp.elを使おうとすると\u003C/p>\n\u003Cpre>\u003Ccode>Wrong type argument: commandp, ad-Orig-foreign-regexp/query-replace\n\u003C/code>\u003C/pre>\n\u003Cp>と怒られて使えないことくらいでしょうか．ちょっと対処できるか頑張ってみましたが敗退して\u003Ca href=\"/mono/Emacs\" class=\"monolog-link\"  title=\"Emacs\">Emacs\u003C/a> 24.3を使うことで対処しています．かなしい．\u003C/p>\n\u003Cp>とはいえ今のは単純な例だったのでmultiple-cursors.elとか使えよ！とかそういう気もしますが，実際正規表現置換は使うので入れておくといざというときに便利です．あとはvisual-regexp.elとかpcre2el.elとかも面白そうですよね．\u003C/p>\n\u003Cp>何かあればコメント欄にくださいますと嬉しいです．それでは．\u003C/p>\n","この記事はEmacs Advent Calendar 2014の第20日目の記事として書かれました．第19日目はkawabata@githubさんによる「Emacs Lispの汎変数（とその他）」でした．第21日目はsanryuuさんによる自作ツールの紹介の予定です．イントロダクションこんばんは．Emacsのお話をします．わたし自身あまりEmacsのさまざまな機能を使いこなせていないのでそういう読者を想定して書きます．Emacsに限らずエディタで何らかのファイルを編集していると，たいていの場合正規表現による検索や置換が欲しくなります．そしてEmacsにはre-builderという素晴らしい機能があります．これは正規表現クエリを書きながら，リアルタイムでそれにマッチする部分を確認出来るという便利なツールです．しかし，Emacsの正規表現は御存知の通り少し面倒くさいです．というか結構面倒くさいです．上のクエリは&quot;^\\\\s-+&lt;li&gt;\\\\(.*\\\\)&lt;/li&gt;&quot;ですが，これだけの長さの中にバックスラッシュが6回も出て来ます．もちろんEmacs Lispを書くときにはコード",{"to":23,"one_hop_アドベントカレンダー":38,"one_hop_Emacs":115},{"urlPath":8,"entities":24},[25,29],{"name":15,"nameSegmented":26,"kind":18,"urlPath":19,"tags":27,"isEmpty":28},[15],[],true,{"name":30,"nameSegmented":31,"kind":32,"urlPath":33,"historyURL":34,"lastModified":35,"attributes":36,"tags":37,"isEmpty":28},"Emacs",[30],"ソフトウェア","/mono/Emacs","https://github.com/kissge/yo.eki.do/commits/master/mono/ソフトウェア/Emacs.md",["Date","2024-06-01T16:59:04.000Z"],{},[],{"urlPath":19,"entities":39},[40,58,72,87,101],{"name":41,"nameSegmented":42,"kind":7,"urlPath":46,"historyURL":47,"lastModified":48,"attributes":49,"tags":53,"isEmpty":57},"PDFと、出版社と、私",[43,44,45],"PDFと、","出版社と、","私","/notes/pdf-publisher-and-me","https://github.com/kissge/yo.eki.do/commits/master/notes/pdf-publisher-and-me.md",["Date","2022-09-04T05:58:48.000Z"],{"title":41,"date":50,"tags":51},["Date","2021-12-23T05:00:00.000Z"],[15,52],"LegalTech",[54,55],{"name":15,"kind":18,"urlPath":19},{"name":52,"kind":18,"urlPath":56},"/mono/LegalTech",false,{"name":59,"nameSegmented":60,"kind":7,"urlPath":64,"historyURL":65,"lastModified":66,"attributes":67,"tags":70,"isEmpty":57},"リーガルリサーチシステム「Legalscape」の技術スタック2021",[61,62,63],"リーガルリサーチシステム","「Legalscape」の","技術スタック2021","/notes/legalscape-tech-stack","https://github.com/kissge/yo.eki.do/commits/master/notes/legalscape-tech-stack.md",["Date","2022-06-11T07:33:39.000Z"],{"title":59,"date":68,"tags":69},["Date","2021-12-02T00:00:00.000Z"],[15],[71],{"name":15,"kind":18,"urlPath":19},{"name":73,"nameSegmented":74,"kind":7,"urlPath":79,"historyURL":80,"lastModified":81,"attributes":82,"tags":85,"isEmpty":57},"来年こそは届いてほしいスマートグラス「Vue」",[75,76,77,78],"来年こそは","届いて","ほしい","スマートグラス「Vue」","/notes/crowdfunding-vue","https://github.com/kissge/yo.eki.do/commits/master/notes/crowdfunding-vue.md",["Date","2022-06-11T07:34:19.000Z"],{"from":12,"title":73,"date":83,"tags":84},["Date","2018-12-13T00:17:07.000Z"],[15],[86],{"name":15,"kind":18,"urlPath":19},{"name":88,"nameSegmented":89,"kind":7,"urlPath":93,"historyURL":94,"lastModified":95,"attributes":96,"tags":99,"isEmpty":57},"Emacs: Windowsでやっていく2017",[90,91,92],"Emacs: Windowsで","やっていく","2017","/notes/emacs-windows-2017","https://github.com/kissge/yo.eki.do/commits/master/notes/emacs-windows-2017.md",["Date","2022-07-02T05:00:46.000Z"],{"from":12,"title":88,"date":97,"tags":98},["Date","2017-12-08T00:00:08.000Z"],[15],[100],{"name":15,"kind":18,"urlPath":19},{"name":102,"nameSegmented":103,"kind":7,"urlPath":107,"historyURL":108,"lastModified":109,"attributes":110,"tags":113,"isEmpty":57},"Emacs: まだターミナルで消耗してるの？",[104,105,106],"Emacs: まだ","ターミナルで","消耗してるの？","/notes/tramp-mode","https://github.com/kissge/yo.eki.do/commits/master/notes/tramp-mode.md",["Date","2022-06-11T07:33:39.000Z"],{"from":12,"title":102,"date":111,"tags":112},["Date","2015-12-04T23:00:02.000Z"],[15],[114],{"name":15,"kind":18,"urlPath":19},{"urlPath":33,"entities":116},[117,118,134,135,147,162,176],{"name":88,"nameSegmented":89,"kind":7,"urlPath":93,"historyURL":94,"lastModified":95,"attributes":96,"tags":99,"isEmpty":57},{"name":119,"nameSegmented":120,"kind":7,"urlPath":128,"historyURL":129,"lastModified":130,"attributes":131,"tags":133,"isEmpty":57},"jediとかvirtualenvとかがReason: image not foundと言ってぶっ壊れたときの対処",[121,122,123,124,125,126,127],"jediとか","virtualenvとかが","Reason: image not foundと","言って","ぶっ壊れた","ときの","対処","/notes/jedi-virtualenv","https://github.com/kissge/yo.eki.do/commits/master/notes/jedi-virtualenv.md",["Date","2022-04-17T12:08:43.000Z"],{"from":12,"title":119,"date":132},["Date","2016-08-26T00:17:53.000Z"],[],{"name":102,"nameSegmented":103,"kind":7,"urlPath":107,"historyURL":108,"lastModified":109,"attributes":110,"tags":113,"isEmpty":57},{"name":136,"nameSegmented":137,"kind":7,"urlPath":141,"historyURL":142,"lastModified":143,"attributes":144,"tags":146,"isEmpty":57},"Emacs: ファイル名補完で「Icon^M」を無視する",[138,139,140],"Emacs: ファイル名補完で","「Icon^M」を","無視する","/notes/emacs-icon-m","https://github.com/kissge/yo.eki.do/commits/master/notes/emacs-icon-m.md",["Date","2022-04-17T12:08:43.000Z"],{"from":12,"title":136,"date":145},["Date","2014-12-16T22:21:21.000Z"],[],{"name":148,"nameSegmented":149,"kind":7,"urlPath":156,"historyURL":157,"lastModified":158,"attributes":159,"tags":161,"isEmpty":57},"Cygwin/X でウィンドウをリサイズしようとすると高さが潰れてしまう",[150,151,152,153,154,155],"Cygwin/X で","ウィンドウを","リサイズしようと","すると","高さが","潰れてしまう","/notes/window-resize","https://github.com/kissge/yo.eki.do/commits/master/notes/window-resize.md",["Date","2022-04-17T12:08:43.000Z"],{"from":12,"title":148,"date":160},["Date","2014-08-05T04:38:45.000Z"],[],{"name":163,"nameSegmented":164,"kind":7,"urlPath":170,"historyURL":171,"lastModified":172,"attributes":173,"tags":175,"isEmpty":57},"Emacs 24 でクリップボードとの連携が上手くいかなくなった",[165,166,167,168,169],"Emacs 24 で","クリップボードとの","連携が","上手く","いかなくなった","/notes/emacs24","https://github.com/kissge/yo.eki.do/commits/master/notes/emacs24.md",["Date","2022-04-17T12:14:26.000Z"],{"from":12,"title":163,"date":174},["Date","2014-07-23T22:14:19.000Z"],[],{"name":177,"nameSegmented":178,"kind":7,"urlPath":181,"historyURL":182,"lastModified":183,"attributes":184,"tags":186,"isEmpty":57},"Emacs: git-gutter が便利過ぎる",[179,180],"Emacs: git-gutter が","便利過ぎる","/notes/git-gutter","https://github.com/kissge/yo.eki.do/commits/master/notes/git-gutter.md",["Date","2022-04-17T12:08:43.000Z"],{"from":12,"title":177,"date":185},["Date","2014-07-23T19:15:10.000Z"],[]],"uses":{"url":1}}]}
