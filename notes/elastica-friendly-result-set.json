{"from":"wordpress","title":"Elasticaの戻り値をいい感じにラップするライブラリを書いた","date":"2016-07-27T05:34:31.000Z","type":"notes","slug":"elastica-friendly-result-set","html":"<p>PHPでElasticSearchをあつかうときの定番ライブラリに<a href=\"https://github.com/ruflin/Elastica\">Elastica</a>というものがある。\nSymfonyで扱うときはこれをさらにラップした<a href=\"https://github.com/FriendsOfSymfony/FOSElasticaBundle\">FOSElasticaBundle</a>を使うとよい。</p>\n<p>Elasticaの難点として、クエリを投げて帰ってくる結果が連想配列で得られるのだが、これが無駄に深いネストがあったりして地味に使いづらい。</p>\n<!--more-->\n<pre><code class=\"hljs language-php\"><span class=\"hljs-variable\">$result</span> = <span class=\"hljs-variable\">$index</span>-&gt;<span class=\"hljs-title function_ invoke__\">search</span>(<span class=\"hljs-variable\">$query</span>)-&gt;<span class=\"hljs-title function_ invoke__\">getAggregations</span>()\n</code></pre>\n<p>こんな感じで結果を取るとすると</p>\n<pre><code class=\"hljs language-php\">[\n    <span class=\"hljs-string\">&#x27;interval&#x27;</span> =&gt; [\n        <span class=\"hljs-string\">&#x27;buckets&#x27;</span> =&gt; [\n            [\n                <span class=\"hljs-string\">&#x27;key_as_string&#x27;</span> =&gt; <span class=\"hljs-string\">&#x27;2016-05-31T15:00:00.000Z&#x27;</span>,\n                <span class=\"hljs-string\">&#x27;key&#x27;</span> =&gt; <span class=\"hljs-number\">1464706800000</span>,\n                <span class=\"hljs-string\">&#x27;doc_count&#x27;</span> =&gt; <span class=\"hljs-number\">1000</span>,\n                <span class=\"hljs-string\">&#x27;editor&#x27;</span> =&gt; [\n                    <span class=\"hljs-string\">&#x27;doc_count_error_upper_bound&#x27;</span> =&gt; <span class=\"hljs-number\">0</span>,\n                    <span class=\"hljs-string\">&#x27;sum_other_doc_count&#x27;</span> =&gt; <span class=\"hljs-number\">0</span>,\n                    <span class=\"hljs-string\">&#x27;buckets&#x27;</span> =&gt; [\n                        [\n                            <span class=\"hljs-string\">&#x27;key&#x27;</span> =&gt; <span class=\"hljs-string\">&#x27;Emacs&#x27;</span>,\n                            <span class=\"hljs-string\">&#x27;doc_count&#x27;</span> =&gt; <span class=\"hljs-number\">800</span>,\n                        ],\n                        [\n                            <span class=\"hljs-string\">&#x27;key&#x27;</span> =&gt; <span class=\"hljs-string\">&#x27;nano&#x27;</span>,\n                            <span class=\"hljs-string\">&#x27;doc_count&#x27;</span> =&gt; <span class=\"hljs-number\">200</span>,\n                        ],\n                    ],\n                ],\n            ],\n            [\n                <span class=\"hljs-string\">&#x27;key_as_string&#x27;</span> =&gt; <span class=\"hljs-string\">&#x27;2016-06-30T15:00:00.000Z&#x27;</span>,\n                <span class=\"hljs-string\">&#x27;key&#x27;</span> =&gt; <span class=\"hljs-number\">1467298800000</span>,\n                <span class=\"hljs-string\">&#x27;doc_count&#x27;</span> =&gt; <span class=\"hljs-number\">2000</span>,\n                <span class=\"hljs-string\">&#x27;editor&#x27;</span> =&gt; [\n                    <span class=\"hljs-string\">&#x27;doc_count_error_upper_bound&#x27;</span> =&gt; <span class=\"hljs-number\">0</span>,\n                    <span class=\"hljs-string\">&#x27;sum_other_doc_count&#x27;</span> =&gt; <span class=\"hljs-number\">0</span>,\n                    <span class=\"hljs-string\">&#x27;buckets&#x27;</span> =&gt; [\n                        [\n                            <span class=\"hljs-string\">&#x27;key&#x27;</span> =&gt; <span class=\"hljs-string\">&#x27;SublimeText&#x27;</span>,\n                            <span class=\"hljs-string\">&#x27;doc_count&#x27;</span> =&gt; <span class=\"hljs-number\">1800</span>,\n                        ],\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n</code></pre>\n<p>こんな感じで返ってきたりするので</p>\n<pre><code class=\"hljs language-php\"><span class=\"hljs-variable\">$result</span>[<span class=\"hljs-string\">&#x27;interval&#x27;</span>][<span class=\"hljs-string\">&#x27;buckets&#x27;</span>][<span class=\"hljs-string\">&#x27;editor&#x27;</span>][<span class=\"hljs-string\">&#x27;buckets&#x27;</span>][<span class=\"hljs-string\">&#x27;doc_count&#x27;</span>]\n</code></pre>\n<p>とかやって欲しいデータを取る。\nちょっと指が疲れて微妙なのでこの辺をいい感じにラップするライブラリ<a href=\"https://github.com/kissge/ElasticaFriendlyResultSet\">ElasticaFriendlyResultSet</a>を書いた。</p>\n<x-script src=\"https://cdn.jsdelivr.net/github-cards/latest/widget.js\">\n<div class=\"github-card\" data-github=\"kissge/ElasticaFriendlyResultSet\" data-width=\"400\" data-height=\"296\" data-theme=\"medium\"></div>\n</x-script>\n<p>これを使うと</p>\n<pre><code class=\"hljs language-php\"><span class=\"hljs-variable\">$result</span>-&gt;interval-&gt;editor-&gt;doc_count\n</code></pre>\n<p>となる。</p>\n<p>……あんまり変わってないじゃん！と思うかもしれないが、これをtwigから呼ぶと</p>\n<pre><code class=\"hljs language-twig\"><span class=\"hljs-template-variable\">{{ result[<span class=\"hljs-string\">&#x27;interval&#x27;</span>][<span class=\"hljs-string\">&#x27;buckets&#x27;</span>][<span class=\"hljs-string\">&#x27;editor&#x27;</span>][<span class=\"hljs-string\">&#x27;buckets&#x27;</span>][<span class=\"hljs-string\">&#x27;doc_count&#x27;</span>] }}</span><span class=\"language-xml\">\n</span></code></pre>\n<p>が</p>\n<pre><code class=\"hljs language-twig\"><span class=\"hljs-template-variable\">{{ result.interval.editor.doc_count }}</span><span class=\"language-xml\">\n</span></code></pre>\n<p>になったり</p>\n<pre><code class=\"hljs language-twig\"><span class=\"hljs-template-tag\">{%</span> <span class=\"hljs-name\">for</span> interval <span class=\"hljs-keyword\">in</span> result[<span class=\"hljs-string\">&#x27;interval&#x27;</span>][<span class=\"hljs-string\">&#x27;buckets&#x27;</span>] <span class=\"hljs-template-tag\">%}</span><span class=\"language-xml\">\n    </span><span class=\"hljs-template-tag\">{%</span> <span class=\"hljs-name\">for</span> editor <span class=\"hljs-keyword\">in</span> interval[<span class=\"hljs-string\">&#x27;editor&#x27;</span>][<span class=\"hljs-string\">&#x27;buckets&#x27;</span>] <span class=\"hljs-template-tag\">%}</span><span class=\"language-xml\">\n        </span><span class=\"hljs-template-variable\">{{ editor[<span class=\"hljs-string\">&#x27;key&#x27;</span>] }}</span><span class=\"language-xml\">: </span><span class=\"hljs-template-variable\">{{ editor[<span class=\"hljs-string\">&#x27;doc_count&#x27;</span>] }}</span><span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span>\n    </span><span class=\"hljs-template-tag\">{%</span> <span class=\"hljs-name\">endfor</span> <span class=\"hljs-template-tag\">%}</span><span class=\"language-xml\">\n</span><span class=\"hljs-template-tag\">{%</span> <span class=\"hljs-name\">endfor</span> <span class=\"hljs-template-tag\">%}</span><span class=\"language-xml\">\n</span></code></pre>\n<p>が</p>\n<pre><code class=\"hljs language-twig\"><span class=\"hljs-template-tag\">{%</span> <span class=\"hljs-name\">for</span> interval <span class=\"hljs-keyword\">in</span> result.interval <span class=\"hljs-template-tag\">%}</span><span class=\"language-xml\">\n    </span><span class=\"hljs-template-tag\">{%</span> <span class=\"hljs-name\">for</span> key, editor <span class=\"hljs-keyword\">in</span> interval.editor <span class=\"hljs-template-tag\">%}</span><span class=\"language-xml\">\n        </span><span class=\"hljs-template-variable\">{{ key }}</span><span class=\"language-xml\">: </span><span class=\"hljs-template-variable\">{{ editor.doc_count }}</span><span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span>\n    </span><span class=\"hljs-template-tag\">{%</span> <span class=\"hljs-name\">endfor</span> <span class=\"hljs-template-tag\">%}</span><span class=\"language-xml\">\n</span><span class=\"hljs-template-tag\">{%</span> <span class=\"hljs-name\">endfor</span> <span class=\"hljs-template-tag\">%}</span><span class=\"language-xml\">\n</span></code></pre>\n<p>になったら嬉しくないですか？</p>\n<p>ついでに今回練習を兼ねて<a href=\"https://travis-ci.org/kissge/ElasticaFriendlyResultSet\">Travis CI</a>での自動テスト、<a href=\"https://coveralls.io/github/kissge/ElasticaFriendlyResultSet\">Coveralls</a>でのカバレッジレポートとかいろいろ遊んだ。なんか表示がぶっ壊れてるけど。\nテスト初心者だけど、カバレッジ可視化はモチベーションにつながって良いことだと思う。\npassing &amp; 100%のGitHubドヤ顔緑バッジ……もなんか出てないけど（GitHubがキャッシュするから？）。</p>\n<p><img src=\"/images/uploads/2016/07/Screenshot-2016-07-27-05.27.17.png\" alt=\"図\"></p>\n<p>ついでに<a href=\"https://packagist.org\">Packagist</a>にも<a href=\"https://packagist.org/packages/kissge/elastica-friendly-result-set\">登録した</a>ので</p>\n<pre><code class=\"hljs language-sh\">composer require kissge/elastica-friendly-result-set\n</code></pre>\n<p>だけでインストールできるようになった。登録は一瞬で済んだ。</p>\n","headline":"PHPでElasticSearchをあつかうときの定番ライブラリにElasticaというものがある。Symfonyで扱うときはこれをさらにラップしたFOSElasticaBundleを使うとよい。El"}