{"from":"wordpress","title":"Elasticaの戻り値をいい感じにラップするライブラリを書いた","date":"2016-07-27T05:34:31.000Z","slug":"elastica-friendly-result-set","html":"<p>PHPでElasticSearchをあつかうときの定番ライブラリに<a href=\"https://github.com/ruflin/Elastica\">Elastica</a>というものがある。\nSymfonyで扱うときはこれをさらにラップした<a href=\"https://github.com/FriendsOfSymfony/FOSElasticaBundle\">FOSElasticaBundle</a>を使うとよい。</p>\n<p>Elasticaの難点として、クエリを投げて帰ってくる結果が連想配列で得られるのだが、これが無駄に深いネストがあったりして地味に使いづらい。</p>\n<!--more-->\n<pre><code>$result = $index-&gt;search($query)-&gt;getAggregations()\n</code></pre>\n<p>こんな感じで結果を取るとすると</p>\n<pre><code>[\n    'interval' =&gt; [\n        'buckets' =&gt; [\n            [\n                'key_as_string' =&gt; '2016-05-31T15:00:00.000Z',\n                'key' =&gt; 1464706800000,\n                'doc_count' =&gt; 1000,\n                'editor' =&gt; [\n                    'doc_count_error_upper_bound' =&gt; 0,\n                    'sum_other_doc_count' =&gt; 0,\n                    'buckets' =&gt; [\n                        [\n                            'key' =&gt; 'Emacs',\n                            'doc_count' =&gt; 800,\n                        ],\n                        [\n                            'key' =&gt; 'nano',\n                            'doc_count' =&gt; 200,\n                        ],\n                    ],\n                ],\n            ],\n            [\n                'key_as_string' =&gt; '2016-06-30T15:00:00.000Z',\n                'key' =&gt; 1467298800000,\n                'doc_count' =&gt; 2000,\n                'editor' =&gt; [\n                    'doc_count_error_upper_bound' =&gt; 0,\n                    'sum_other_doc_count' =&gt; 0,\n                    'buckets' =&gt; [\n                        [\n                            'key' =&gt; 'SublimeText',\n                            'doc_count' =&gt; 1800,\n                        ],\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n</code></pre>\n<p>こんな感じで返ってきたりするので</p>\n<pre><code>$result['interval']['buckets']['editor']['buckets']['doc_count']\n</code></pre>\n<p>とかやって欲しいデータを取る。\nちょっと指が疲れて微妙なのでこの辺をいい感じにラップするライブラリ<a href=\"https://github.com/kissge/ElasticaFriendlyResultSet\">ElasticaFriendlyResultSet</a>を書いた。</p>\n<div class=\"github-card\" data-github=\"kissge/ElasticaFriendlyResultSet\" data-width=\"400\" data-height=\"296\" data-theme=\"medium\"></div>\n<script src=\"https://cdn.jsdelivr.net/github-cards/latest/widget.js\"></script>\n<p>これを使うと</p>\n<pre><code>$result-&gt;interval-&gt;editor-&gt;doc_count\n</code></pre>\n<p>となる。</p>\n<p>……あんまり変わってないじゃん！と思うかもしれないが、これをtwigから呼ぶと</p>\n<pre><code>{{ result['interval']['buckets']['editor']['buckets']['doc_count'] }}\n</code></pre>\n<p>が</p>\n<pre><code>{{ result.interval.editor.doc_count }}\n</code></pre>\n<p>になったり</p>\n<pre><code>{% for interval in result['interval']['buckets'] %}\n    {% for editor in interval['editor']['buckets'] %}\n        {{ editor['key'] }}: {{ editor['doc_count'] }}&lt;br /&gt;\n    {% endfor %}\n{% endfor %}\n</code></pre>\n<p>が</p>\n<pre><code>{% for interval in result.interval %}\n    {% for key, editor in interval.editor %}\n        {{ key }}: {{ editor.doc_count }}&lt;br /&gt;\n    {% endfor %}\n{% endfor %}\n</code></pre>\n<p>になったら嬉しくないですか？</p>\n<p>ついでに今回練習を兼ねて<a href=\"https://travis-ci.org/kissge/ElasticaFriendlyResultSet\">Travis CI</a>での自動テスト、<a href=\"https://coveralls.io/github/kissge/ElasticaFriendlyResultSet\">Coveralls</a>でのカバレッジレポートとかいろいろ遊んだ。なんか表示がぶっ壊れてるけど。\nテスト初心者だけど、カバレッジ可視化はモチベーションにつながって良いことだと思う。\npassing &amp; 100%のGitHubドヤ顔緑バッジ……もなんか出てないけど（GitHubがキャッシュするから？）。</p>\n<p><img src=\"/images/uploads/2016/07/Screenshot-2016-07-27-05.27.17.png\" alt=\"図\"></p>\n<p>ついでに<a href=\"https://packagist.org\">Packagist</a>にも<a href=\"https://packagist.org/packages/kissge/elastica-friendly-result-set\">登録した</a>ので</p>\n<pre><code>composer require kissge/elastica-friendly-result-set\n</code></pre>\n<p>だけでインストールできるようになった。登録は一瞬で済んだ。</p>\n","headline":"PHPでElasticSearchをあつかうときの定番ライブラリに[Elastica](https://github.com/ruflin/Elastica)というものがある。 Symfonyで扱うと"}