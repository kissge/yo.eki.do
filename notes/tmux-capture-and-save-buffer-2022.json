{"title":"tmux: pane の表示内容をファイルに書き出す 2022","date":"2022-04-17T12:25:08.254Z","type":"notes","slug":"tmux-capture-and-save-buffer-2022","html":"<p>tmux を使っていて、今表示されている画面の内容をコピーしたい、あるいはファイルに保存したいというときに使える方法の話。</p>\n<p>以前「<a href=\"/notes/tmux-capture-and-save-buffer/\">tmux: pane の表示内容をファイルに書き出す</a>」というメモを自分で書いて、何だかんだいまだに毎月一回以上は自分で見ている。\nなんで見ているかというと、シェル上で実行するコマンドはヒストリに残るのでそれを参照すればなんとかなるが、tmux コマンドはそうでない場面が多いという理由が大きい。</p>\n<p>しかし、よくよく考えると、tmux コマンドもシェル上で実行できることに気づき、いろいろ試した結果、かなり簡略化できた。</p>\n<p>つまり、tmux セッションのコピーしたい pane の中でこうすればよい。</p>\n<pre><code class=\"hljs language-sh\">tmux capture-pane -pS - &gt; /tmp/hoge\n</code></pre>\n<p><code>-p</code> は出力先をバッファではなく標準出力に指定し、 <code>-S -</code> は pane の先頭から（末尾まで）を対象範囲に指定している。</p>\n<p>あるいは、tmux をローカル環境で実行している場合には、こういうこともできる<sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup>。</p>\n<pre><code class=\"hljs language-sh\"><span class=\"hljs-comment\"># macOS</span>\ntmux capture-pane -pS - | pbcopy\n\n<span class=\"hljs-comment\"># X</span>\ntmux capture-pane -pS - | xsel --clipboard\ntmux capture-pane -pS - | xclip -sel clipboard\n</code></pre>\n<p>色などの情報を落とさずに出力するには、こうする。</p>\n<pre><code class=\"hljs language-sh\">tmux capture-pane -epS - &gt; /tmp/hoge\n</code></pre>\n<hr class=\"footnotes-sep\">\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p>xsel と xclip のどちらがイケてるかについては、諸説あるらしい。 <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>\n","headline":"tmux を使っていて、今表示されている画面の内容をコピーしたい、あるいはファイルに保存したいというときに使える方法の話。以前「tmux: pane の表示内容をファイルに書き出す」というメモを自分で"}