{"entity":{"name":"Emacs: Windowsでやっていく2017","nameSegmented":["Emacs: ","Windowsで","やっていく","2017"],"kind":"note","urlPath":"/notes/emacs-windows-2017","historyURL":"https://github.com/kissge/yo.eki.do/commits/master/notes/emacs-windows-2017.md","lastModified":"2022-07-02T05:00:46.000Z","attributes":{"from":"wordpress","title":"Emacs: Windowsでやっていく2017","date":"2017-12-08T00:00:08.000Z","tags":["アドベントカレンダー"]},"tags":[{"name":"アドベントカレンダー","kind":"tag","urlPath":"/mono/%E3%82%A2%E3%83%89%E3%83%99%E3%83%B3%E3%83%88%E3%82%AB%E3%83%AC%E3%83%B3%E3%83%80%E3%83%BC"}],"body":"<p>この記事は<a href=\"https://qiita.com/advent-calendar/2017/emacs\">Emacs Advent Calendar 2017</a>の第8日目の記事として書かれました。第7日目は<a href=\"https://qiita.com/yynozk\">yynozk</a>さんによる「<a href=\"https://qiita.com/yynozk/items/36a590b49a9237907335\">Emacs の org-mode は表計算もできてしまう</a>」です。第9日目は<a href=\"https://qiita.com/tm_tn\">tm_tn</a>さんによる記事の予定です。「何か書きます」とのこと。</p>\n<!--more-->\n\n<p>また騙されて<a href=\"/mono/Windows\" class=\"monolog-link\" sveltekit:prefetch title=\"Windows\">Windows</a>に戻ってきてしまった。</p>\n<p>先日買ったノートパソコンはMicrosoft Surface Book 2である。性能も申し分ないし、タッチスクリーンの完成度は最高。てか267 dpiて。うちにある外付けモニタが馬鹿みたいに見えてしまって逆に困るレベルである。とは言え誤算がひとつだけあって、このサーフェスブックにはマッキントッシュは入らないらしい。これでは★一つしかつけられそうにない。インタネーットの情報では入ると聞いていたのだが、よくよく見てみるとSurface Bookの話であった。これはSurface Book 2。そのあたりで差が出たのだと思う。</p>\n<p>冗談はさておき、しかし<a href=\"/mono/Windows\" class=\"monolog-link\" sveltekit:prefetch title=\"Windows\">Windows</a>も悪くないものだ。<a href=\"/mono/Windows\" class=\"monolog-link\" sveltekit:prefetch title=\"Windows\">Windows</a>上でEmacsユーザとしてやっていくことに関しては、もう5年以上のキャリアがある。昔はUbuntu VM (VirtualBox) とX転送で頑張ったり、前C++とMSBuildでOSを書いていた時は普通に<a href=\"/mono/Windows\" class=\"monolog-link\" sveltekit:prefetch title=\"Windows\">Windows</a>版のGNU Emacsを使ったりしていたが、今回は最近めでたく正式リリースになった<a href=\"/mono/Windows\" class=\"monolog-link\" sveltekit:prefetch title=\"Windows\">Windows</a> Subsystem for Linux (WSL, 通称Bash on Ubuntu on <a href=\"/mono/Windows\" class=\"monolog-link\" sveltekit:prefetch title=\"Windows\">Windows</a>) を使って快適な作業環境を構築したいと思う。</p>\n<h2 id=\"1-wslをセットアップする\">1. WSLをセットアップする</h2>\n<p>WSLが何であるか、どうやってセットアップするかについてはインターネットで検索してもらいたい。今回は初めてのインストールなのでBeta版を削除するなどの些細なことは気にしなくて良い。とにかくMicrosoft Storeでアプリを導入するのと同じ感覚でUbuntuが使えるようになる。すばらしい。</p>\n<h2 id=\"2-emacsを導入する\">2. Emacsを導入する</h2>\n<p>さて、無事Ubuntu 16.04.3が導入された。早速Emacsを導入したいが、どのバージョンを導入するか考える必要がある。</p>\n<p>Emacs 24で満足できる人は、何も考えずに<code>apt install emacs</code>するだけで無事Emacsが導入できる。</p>\n<p>Emacs 25を導入したい場合は、いろいろ手段はあるがkelleykのPPMを追加するのが一番簡単だろう。</p>\n<pre><code class=\"language-sh\">add-apt-repository ppa:kelleyk/emacs\napt update\napt install emacs25\n</code></pre>\n<p>Emacs 27を導入したいなら、Ubunt Emacs Lisp teamの公開している<a href=\"https://launchpad.net/~ubuntu-elisp/+archive/ubuntu/ppa\">PPM</a>でemacs-snapshotを追加することになるだろうか。開発中のバージョンであり高い頻度で更新される。</p>\n<p>Emacs 26を導入するとなると、もうビルドするしかないのではないか？\n幸い最近のWSLはかなり安定してきておりdependencyを正しく導入すると問題なくビルドできる。Emacsのソースを管理するgitレポジトリは巨大なのでfetchを最小限に抑えるとかなり時間短縮になる (cf. <a href=\"/notes/git-only-single-commit\" class=\"monolog-link\" sveltekit:prefetch>コミット・タグを指定してその時点でのツリーだけをgit cloneしてくる | 葉月夜堂</a>)。dependencyの導入まで合わせて、こんな感じ。</p>\n<x-script src=\"https://gist.github.com/kissge/e925a60437aacac5475673c70bc496e8.js\"></x-script><h2 id=\"3-xサーバを導入する\">3. Xサーバを導入する</h2>\n<p>最後にXサーバを導入すると完璧だ。もちろんターミナルさえあれば何もいらないというハードコアな諸兄にとっては不要だろう。しかし、GUIのほうが使える操作が増えるし使いやすいので個人的にはここまでおすすめしたい。</p>\n<p>以前はXmingのフリー版 (Public Domain Release) かCygwin/Xらへんが定番だったような気がする。調べたところVcxsrvかXmingの寄付版 (フリー版はこのソフトウェアの10年前のバージョン) を使うのが今風のようである。初めて名前を聞くので今回は<a href=\"https://sourceforge.net/projects/vcxsrv/\">Vcxsrv</a>を導入してみたが、今のところ全く不安定さを感じる場面は無い。GitHubを見ると更新が2年止まっているように見えるが、Sourceforgeではかなりアクティブにリリースされているようだ。</p>\n<p><strong>追記 (12/10)</strong>: VcXsrvを起動中にディスプレイの一つを切断するとVcXsrvがクラッシュすることがあるような気がします。</p>\n<p>さて、ここまでセットアップを終えると無事GUI版のEmacsが使えるようになっているはずである。</p>\n<pre><code class=\"language-sh\">DISPLAY=:0 emacs\n</code></pre>\n<figure><img src=\"/images/uploads/2017/12/emacs1.png\" alt=\"\"></figure><p>ここからはもう少し細かいカスタマイズをしていく。</p>\n<h2 id=\"スケーリング設定を切る\">スケーリング設定を切る</h2>\n<p>さて、Surface Book 2はいわゆるhigh-DPIディスプレイである。あまりに1ピクセル（ソフトウェアから見た）の寸法（人間の目から見た）が小さすぎるので、工場出荷時にはスケーリングが200%に設定されている。一方Vcxsrvは（ざっくり言うと）X転送ということでクライアント (Linux) 側でレンダリングされたビットマップを<a href=\"/mono/Windows\" class=\"monolog-link\" sveltekit:prefetch title=\"Windows\">Windows</a>上で表示するということをしている。Vcxsrvの描画するウィンドウは<a href=\"/mono/Windows\" class=\"monolog-link\" sveltekit:prefetch title=\"Windows\">Windows</a>のスケーリングをかけると単に画像が大きくなってしまってあまり見栄えがよろしくない、ということになる（ざっくり言うと）。というわけでVcxsrv.exeを適切に設定してこのスケーリング設定を無効化してしまおう。まずVcxsrv.exeのプロパティを表示する。ファイル自体は、Vcxsrvへのショートカットを右クリックして “Open file location” するのを繰り返して探し出すか、おそらくは<code>C:\\Program Files\\VcXsrv</code>にあるだろうから直接探す。そして “Compatibility” タブの “Override high DPI scaling behavior. Scaling performed by:” の項目を “Application” に変えてしまえばOK。</p>\n<figure><img src=\"/images/uploads/2017/12/emacs4.png\" alt=\"\"></figure><p><strong>追記 (12/10)</strong>: これ、やるのとやらないのでどちらが「きれい」か、あまり自明ではないですね。試行錯誤中です。切るとタイトルバーが馬鹿みたいに大きくなるのが癪なので再び有効にしてみているところ。</p>\n<h2 id=\"いい感じの日本語フォントを導入する\">いい感じの<a href=\"/mono/%E6%97%A5%E6%9C%AC%E8%AA%9E\" class=\"monolog-link\" sveltekit:prefetch title=\"日本語\">日本語</a>フォントを導入する</h2>\n<p>何もしなくても<a href=\"/mono/%E6%97%A5%E6%9C%AC%E8%AA%9E\" class=\"monolog-link\" sveltekit:prefetch title=\"日本語\">日本語</a>は表示されるはずである。が、句読点の位置が中国語のそれだったり、ちょっといまいち。導入の手軽さもこみでGoogle/Adobe謹製のNotoフォントをおすすめする。X転送ってどっちにフォント入れればいいのか忘れるけれど、今どきはとりあえずクライアント (Linux) 側ということになっている。というわけでインストールはaptで簡単に。</p>\n<pre><code class=\"language-sh\">apt install fonts-noto-cjk\n</code></pre>\n<p>Emacsのほうはこんな感じで設定を。</p>\n<pre><code class=\"language-lisp\">(<span class=\"hljs-name\">set-fontset-font</span> <span class=\"hljs-string\">&quot;fontset-default&quot;</span> &#x27;japanese-jisx0208 &#x27;(<span class=\"hljs-string\">&quot;Noto Sans CJK JP Medium&quot;</span> . <span class=\"hljs-string\">&quot;iso10646-1&quot;</span>))\n</code></pre>\n<h2 id=\"日本語入力\"><a href=\"/mono/%E6%97%A5%E6%9C%AC%E8%AA%9E\" class=\"monolog-link\" sveltekit:prefetch title=\"日本語\">日本語</a>入力</h2>\n<p>表示ときたら次は入力。今回も使い慣れたmozc (Google<a href=\"/mono/%E6%97%A5%E6%9C%AC%E8%AA%9E\" class=\"monolog-link\" sveltekit:prefetch title=\"日本語\">日本語</a>入力のオープンソース版)　とemacs-mozc-binでいく。まずターミナルでサーバをインストールする。</p>\n<pre><code class=\"language-sh\">apt install emacs-mozc-bin\n</code></pre>\n<p>Emacs側ではまず<a href=\"https://raw.githubusercontent.com/google/mozc/master/src/unix/emacs/mozc.el\">mozc.el</a>を手に入れ、<code>load-path</code>の通っているディレクトリに置く。そして</p>\n<pre><code class=\"language-lisp\">(<span class=\"hljs-name\">setq</span> default-input-method <span class=\"hljs-string\">&quot;japanese-mozc&quot;</span>)\n(<span class=\"hljs-name\">require</span> &#x27;mozc)\n</code></pre>\n<p>あとは<code>M-x toggle-input-method</code>でIMEのオンオフが切り替えられる。好みに応じて<code>global-set-key</code>しておこう。ちなみに全角半角キーは<code>(kbd &quot;&lt;zenkaku-hankaku&gt;&quot;)</code>で指定できる。</p>\n<p>蛇足だが個人的に気に入っているのでgnome-terminalも導入した（めちゃくちゃdependencyが多かった）。こちらの<a href=\"/mono/%E6%97%A5%E6%9C%AC%E8%AA%9E\" class=\"monolog-link\" sveltekit:prefetch title=\"日本語\">日本語</a>入力はいつものUbuntuと同じとはいかない。残念ながらibusはうまく動かないようである。今回は妥協してuim-fepとanthyを使うことにした。こんな感じでターミナルの一番下の行を1行占領してしまうが、しょうがない。</p>\n<figure><img src=\"/images/uploads/2017/12/emacs2.png\" alt=\"\"></figure><p>gnome-terminalの設定で、起動するシェルをuim-fepにしておこう。.bashrcで呼び出すように設定しても良いが、二重起動しないようにいろいろ頭を使うのが面倒だった。Emacsの<code>shell</code>などで起動しないで欲しいという理由もある。</p>\n<h2 id=\"windowsから直接emacsを起動する\"><a href=\"/mono/Windows\" class=\"monolog-link\" sveltekit:prefetch title=\"Windows\">Windows</a>から直接Emacsを起動する</h2>\n<p>さて、毎回Emacsを起動するためにWSLのターミナルを呼び出すのは面倒くさい。<a href=\"/mono/Windows\" class=\"monolog-link\" sveltekit:prefetch title=\"Windows\">Windows</a>からWSL上のコマンドを実行するのは簡単だ。<a href=\"/mono/Windows\" class=\"monolog-link\" sveltekit:prefetch title=\"Windows\">Windows</a> + Rキーで開くファイル名を指定して実行 (Run) ダイアログなどからbashを呼び出すだけで良い。</p>\n<pre><code class=\"language-sh\">bash -c <span class=\"hljs-string\">&quot;DISPLAY=:0 emacs&quot;</span>\n</code></pre>\n<p>しかし、これだと「黒画面」が表示しっぱなしになってしまう。Emacsが終了するまでbash.exeのウィンドウが裏に表示されたままになってしまうのである。そこでひと工夫加えてこうすれば良い。</p>\n<pre><code class=\"language-sh\">bash -c <span class=\"hljs-string\">&quot;DISPLAY=:0 emacs &amp;&quot;</span>\n</code></pre>\n<p>良い……んじゃないかと思う。自分のショートカット見たらこれじゃなくてrun.exe使ってて、あれ、&amp;じゃダメな理由あったんだっけ……忘れた……。</p>\n<p>ついでに、起動時のデフォルトディレクトリが変なディレクトリになって気に入らないので<code>bash -c &quot;cd; DISPLAY=:0 emacs &amp;&quot;</code>などとしてしまっても良い。</p>\n<p>言うまでもないことだがGUIウィンドウを使いたければXサーバが立っている必要がある。<a href=\"/mono/Windows\" class=\"monolog-link\" sveltekit:prefetch title=\"Windows\">Windows</a>の起動時に自動で起動するようにするのが簡単だろう。エクスプローラのアドレスバーで<code>shell:startup</code>と指定すると開くディレクトリにVcxsrvへのショートカットを置くだけである。</p>\n<h2 id=\"もちろんtramp-modeも使え\">もちろんtramp-modeも使え……</h2>\n<p>これで概ね開発環境は整った！\nあとはSSHの設定を適切に行いいつものようにtramp-modeで開発用のLinuxサーバのファイルを編集するだけである (cf. <a href=\"/notes/tramp-mode\" class=\"monolog-link\" sveltekit:prefetch>Emacs: まだターミナルで消耗してるの？ | 葉月夜堂</a>)。</p>\n<p>が、ここで重大な問題が発生する。</p>\n<p>tramp-modeを使ってリモートファイルを編集し保存しようとすると、”Decoding remote file `xxxx’ using `xxxx’” のところでEmacsがハングしてしまうのである。おまけに編集中のファイルは消滅してしまう。最悪だ。</p>\n<p>うーん…………。WSL, sshfsもまだ使えないみたいだし……。</p>\n<p>うーん…………。</p>\n<p>Emacsやめるか……。</p>\n<p>　\n　\n　\n　\n　\n　</p>\n<p>というわけで他のエディタを導入してみる。実を言うと時代遅れのEmacsなんてはやく辞めたかったのである。時代はElectron製イケてるエディタやな！！</p>\n<p>　\n　\n　\n　\n　\n　</p>\n<p>が、やっぱりダメ。エディタを起動したらまず<code>find-file</code>したい。GUIのファイルオープンダイアログなんか使いたくない。プロジェクトにファイルがありませんじゃない。IDEじゃなくてエディタが欲しいんだよ。</p>\n<p>てかリモートファイル編集がないって何？&#128162;\nファイルをダウンロードして編集して保存してアップロードするのか？sshしてターミナルで操作の限定された状況でファイルを編集するのか？サーバを立てるごとに環境構築して？\n21世紀なのに？え？</p>\n<p>というわけでやっぱりEmacsを使うしか無い（個人の感想です）という結論に。個人の感想ですよ。Atomの<a href=\"https://atom.io/packages/ftp-remote-edit\">ftp-remote-edit</a>はいい線いってると思いますよ。</p>\n<p>　\n　\n　\n　\n　\n　</p>\n<p>ともかく気を取り直して頑張ってtramp-modeをデバッグする。どうやらEmacs 25, 26, 27いずれも同様の問題があるらしいことがわかった。（蛇足だがEmacs 26, 27だとGUIで文字が描画されず使い物にならなかった……gtk+ 2, 3両方試してもダメ。あとtrampもファイルを開くたびになんかエラー出る）</p>\n<p>基本通りedebugをアタッチしてみると、<code>process-send-string</code>でbase64エンコードした文字列を送りリモートシェルでデコードする部分で処理が止まってしまうことがわかる。この問題は比較的小さいファイルを編集するときには起きないようだ。そこで、一回に送る文字列の長さを制限してみる。</p>\n<pre><code class=\"language-lisp\">(<span class=\"hljs-name\">custom-set-variables</span> &#x27;(tramp-chunksize <span class=\"hljs-number\">1024</span>))\n</code></pre>\n<p>数字は適当である。が、これがうまくいった。とりあえず今のところ問題は再発していない（10240はダメだった）。</p>\n<p>一応<code>tramp-chunksize</code>をいじるのはWSL上だけに制限しておこう。WSLかどうか判定するのはこういう感じで。</p>\n<pre><code class=\"language-lisp\">(<span class=\"hljs-name\">string-match-p</span> <span class=\"hljs-string\">&quot;Microsoft&quot;</span> (<span class=\"hljs-name\">shell-command-to-string</span> <span class=\"hljs-string\">&quot;uname -r&quot;</span>))\n</code></pre>\n<p>というわけでどうにか開発環境として日常的に使えるように出来た。これがEmacsの問題だったのかtramp-modeなのかWSLなのか、よくわからない。どこかに報告したほうがいいのかもしれない。いずれにせよこれでコードが書ける。よかった。</p>\n<p>大変なこともあったけど、2017年現在、<a href=\"/mono/Windows\" class=\"monolog-link\" sveltekit:prefetch title=\"Windows\">Windows</a>でやっていけそうです。しかも（一応）案外簡単に。</p>\n<figure><img src=\"/images/uploads/2017/12/emacs3.png\" alt=\"\"></figure><p>またEmacsを卒業しそびれてしまったねえ。</p>\n","headline":"この記事はEmacs Advent Calendar 2017の第8日目の記事として書かれました。第7日目はyynozkさんによる「Emacs の org-mode は表計算もできてしまう」です。第9日目はtm_tnさんによる記事の予定です。「何か書きます」とのこと。また騙されてWindowsに戻ってきてしまった。先日買ったノートパソコンはMicrosoft Surface Book 2である。性能も申し分ないし、タッチスクリーンの完成度は最高。てか267 dpiて。うちにある外付けモニタが馬鹿みたいに見えてしまって逆に困るレベルである。とは言え誤算がひとつだけあって、このサーフェスブックにはマッキントッシュは入らないらしい。これでは★一つしかつけられそうにない。インタネーットの情報では入ると聞いていたのだが、よくよく見てみるとSurface Bookの話であった。これはSurface Book 2。そのあたりで差が出たのだと思う。冗談はさておき、しかしWindowsも悪くないものだ。Windows上でEmacsユーザとしてやっていくことに関しては、もう5年以上のキャリアがある。昔はUbuntu VM (Vi","links":{"to":{"urlPath":"/notes/emacs-windows-2017","entities":[{"name":"Windows","nameSegmented":["Windows"],"kind":"tag","urlPath":"/mono/Windows","tags":[],"isEmpty":true},{"name":"日本語","nameSegmented":["日本語"],"kind":"tag","urlPath":"/mono/%E6%97%A5%E6%9C%AC%E8%AA%9E","tags":[],"isEmpty":true},{"name":"アドベントカレンダー","nameSegmented":["アドベントカレンダー"],"kind":"tag","urlPath":"/mono/%E3%82%A2%E3%83%89%E3%83%99%E3%83%B3%E3%83%88%E3%82%AB%E3%83%AC%E3%83%B3%E3%83%80%E3%83%BC","tags":[],"isEmpty":true},{"name":"Emacs: まだターミナルで消耗してるの？","nameSegmented":["Emacs: まだ","ターミナルで","消耗してるの？"],"kind":"note","urlPath":"/notes/tramp-mode","historyURL":"https://github.com/kissge/yo.eki.do/commits/master/notes/tramp-mode.md","lastModified":"2022-06-11T07:33:39.000Z","attributes":{"from":"wordpress","title":"Emacs: まだターミナルで消耗してるの？","date":"2015-12-04T23:00:02.000Z","tags":["アドベントカレンダー"]},"tags":[{"name":"アドベントカレンダー","kind":"tag","urlPath":"/mono/%E3%82%A2%E3%83%89%E3%83%99%E3%83%B3%E3%83%88%E3%82%AB%E3%83%AC%E3%83%B3%E3%83%80%E3%83%BC"}],"isEmpty":false},{"name":"コミット・タグを指定してその時点でのツリーだけをgit cloneしてくる","nameSegmented":["コミット・タグを","指定して","その","時点での","ツリーだけを","git ","cloneしてくる"],"kind":"note","urlPath":"/notes/git-only-single-commit","historyURL":"https://github.com/kissge/yo.eki.do/commits/master/notes/git-only-single-commit.md","lastModified":"2022-04-17T12:08:43.000Z","attributes":{"from":"wordpress","title":"コミット・タグを指定してその時点でのツリーだけをgit cloneしてくる","date":"2015-11-10T20:03:33.000Z"},"tags":[],"isEmpty":false}]},"from":{"urlPath":"/notes/emacs-windows-2017","entities":[]},"kind":{"urlPath":"/notes/emacs-windows-2017","entities":[]},"one_hop_Windows":{"urlPath":"/mono/Windows","entities":[{"name":"Windows 11のセットアップ","nameSegmented":["Windows"," 11の","セットアップ"],"urlPath":"/memorandum/Windows%2011%E3%81%AE%E3%82%BB%E3%83%83%E3%83%88%E3%82%A2%E3%83%83%E3%83%97","historyURL":"https://github.com/kissge/yo.eki.do/commits/master/memorandum/Windows 11のセットアップ.md","lastModified":"2022-12-09T01:27:21.000Z","attributes":{"tags":["備忘録","Windows"]},"tags":[{"name":"備忘録","kind":"tag","urlPath":"/mono/%E5%82%99%E5%BF%98%E9%8C%B2"},{"name":"Windows","kind":"tag","urlPath":"/mono/Windows"}],"isEmpty":false},{"name":"VAIO SX12 ALL BLACK EDITIONを買った","nameSegmented":["VAIO ","SX12"," ALL"," BLACK"," EDITIONを","買った"],"kind":"note","urlPath":"/notes/vaio-sx12","historyURL":"https://github.com/kissge/yo.eki.do/commits/master/notes/vaio-sx12.md","lastModified":"2022-12-03T14:52:44.000Z","attributes":{"title":"VAIO SX12 ALL BLACK EDITIONを買った","date":"2022-12-03T14:01:38.000Z","header":"https://vaio.com/products/allblack_sx12/images/img_main.png"},"tags":[],"isEmpty":false},{"name":"Introduction to Legal NLP","nameSegmented":["Introduction ","to"," Legal"," NLP"],"kind":"note","urlPath":"/notes/lnlp","historyURL":"https://github.com/kissge/yo.eki.do/commits/master/notes/lnlp.md","lastModified":"2023-03-04T14:34:01.000Z","attributes":{"title":"Introduction to Legal NLP","date":"2022-09-04T03:30:00.000Z","lang":"en","slides":true,"tags":["NLP","LegalTech"]},"tags":[{"name":"NLP","kind":"tag","urlPath":"/mono/NLP"},{"name":"LegalTech","kind":"tag","urlPath":"/mono/LegalTech"}],"isEmpty":false},{"name":"うちのHP Spectre x360 Convertible 13がなんか変","nameSegmented":["うちの","HP"," Spectre"," x360 ","Convertible ","13が","なんか","変"],"kind":"note","urlPath":"/notes/hp-spectre-13","historyURL":"https://github.com/kissge/yo.eki.do/commits/master/notes/hp-spectre-13.md","lastModified":"2022-06-27T06:25:27.000Z","attributes":{"title":"うちのHP Spectre x360 Convertible 13がなんか変","date":"2022-06-26T14:14:13.000Z","header":"https://jp.ext.hp.com/content/dam/jp-ext-hp-com/jp/ja/ec/notebooks/personal/spectre/images/design_img_x360_13.jpg"},"tags":[],"isEmpty":false},{"name":"ウィンドウをドラッグしたまま画面の端にぐぐぐっと押し付けることで最大化したり画面サイズの半分の大きさに変えたりするやつをOS Xでやる","nameSegmented":["ウィンドウを","ドラッグした","まま","画面の","端に","ぐぐぐっと","押し","付ける","ことで","最大化したり","画面","サイズの","半分の","大きさに","変えたりする","やつを","OS"," Xで","やる"],"kind":"note","urlPath":"/notes/maximize-windows-by-dragging-them-to-the-screen-edge-on-osx","historyURL":"https://github.com/kissge/yo.eki.do/commits/master/notes/maximize-windows-by-dragging-them-to-the-screen-edge-on-osx.md","lastModified":"2022-04-17T12:08:43.000Z","attributes":{"from":"wordpress","title":"ウィンドウをドラッグしたまま画面の端にぐぐぐっと押し付けることで最大化したり画面サイズの半分の大きさに変えたりするやつをOS Xでやる","date":"2016-01-12T22:14:29.000Z"},"tags":[],"isEmpty":false},{"name":"マルチブート覚書","nameSegmented":["マルチブート覚書"],"kind":"note","urlPath":"/notes/multiboot","historyURL":"https://github.com/kissge/yo.eki.do/commits/master/notes/multiboot.md","lastModified":"2022-04-17T12:08:43.000Z","attributes":{"from":"wordpress","title":"マルチブート覚書","date":"2015-11-03T23:49:51.000Z"},"tags":[],"isEmpty":false},{"name":"二段組みのPDFを読みやすく変換する","nameSegmented":["二段組みの","PDFを","読みや","すく","変換する"],"kind":"note","urlPath":"/notes/2-column-pdf","historyURL":"https://github.com/kissge/yo.eki.do/commits/master/notes/2-column-pdf.md","lastModified":"2022-06-11T07:32:46.000Z","attributes":{"from":"wordpress","title":"二段組みのPDFを読みやすく変換する","date":"2014-12-10T22:31:22.000Z"},"tags":[],"isEmpty":false},{"name":"Cygwin/X でウィンドウをリサイズしようとすると高さが潰れてしまう","nameSegmented":["Cygwin/","X で","ウィンドウを","リサイズしようと","すると","高さが","潰れてしまう"],"kind":"note","urlPath":"/notes/window-resize","historyURL":"https://github.com/kissge/yo.eki.do/commits/master/notes/window-resize.md","lastModified":"2022-04-17T12:08:43.000Z","attributes":{"from":"wordpress","title":"Cygwin/X でウィンドウをリサイズしようとすると高さが潰れてしまう","date":"2014-08-05T04:38:45.000Z"},"tags":[],"isEmpty":false},{"name":"Emacs 24 でクリップボードとの連携が上手くいかなくなった","nameSegmented":["Emacs"," 24 で","クリップボードとの","連携が","上手く","いかなくなった"],"kind":"note","urlPath":"/notes/emacs24","historyURL":"https://github.com/kissge/yo.eki.do/commits/master/notes/emacs24.md","lastModified":"2022-04-17T12:14:26.000Z","attributes":{"from":"wordpress","title":"Emacs 24 でクリップボードとの連携が上手くいかなくなった","date":"2014-07-23T22:14:19.000Z"},"tags":[],"isEmpty":false}]},"one_hop_日本語":{"urlPath":"/mono/%E6%97%A5%E6%9C%AC%E8%AA%9E","entities":[{"name":"リバーシブルな二字熟語","nameSegmented":["リバーシブルな","二字熟語"],"urlPath":"/memorandum/%E3%83%AA%E3%83%90%E3%83%BC%E3%82%B7%E3%83%96%E3%83%AB%E3%81%AA%E4%BA%8C%E5%AD%97%E7%86%9F%E8%AA%9E","historyURL":"https://github.com/kissge/yo.eki.do/commits/master/memorandum/リバーシブルな二字熟語.md","lastModified":"2022-06-12T03:43:05.000Z","attributes":{"tags":["備忘録","日本語"]},"tags":[{"name":"備忘録","kind":"tag","urlPath":"/mono/%E5%82%99%E5%BF%98%E9%8C%B2"},{"name":"日本語","kind":"tag","urlPath":"/mono/%E6%97%A5%E6%9C%AC%E8%AA%9E"}],"isEmpty":false},{"name":"How do Japanese type?","nameSegmented":["How"," do ","Japanese"," type?"],"kind":"note","urlPath":"/notes/how-do-japanese-type","historyURL":"https://github.com/kissge/yo.eki.do/commits/master/notes/how-do-japanese-type.md","lastModified":"2022-06-11T11:32:30.000Z","attributes":{"title":"How do Japanese type?","date":"2022-05-29T01:00:00.000Z","lang":"en","tags":["日本語"]},"tags":[{"name":"日本語","kind":"tag","urlPath":"/mono/%E6%97%A5%E6%9C%AC%E8%AA%9E"}],"isEmpty":false},{"name":"ja-JP-u-ca-japaneseって何？ UnicodeのCLDRを読んでみよう（あるいは、JavaScriptで和暦を得る簡単なテクについて）","nameSegmented":["ja-","JP","-u","-ca-","japaneseって","何？"," Unicodeの","CLDRを","読んでみよう","（あるいは、","JavaScriptで","和暦を","得る","簡単な","テクに","ついて）"],"kind":"note","urlPath":"/notes/cldr","historyURL":"https://github.com/kissge/yo.eki.do/commits/master/notes/cldr.md","lastModified":"2022-06-11T11:32:20.000Z","attributes":{"title":"ja-JP-u-ca-japaneseって何？ UnicodeのCLDRを読んでみよう（あるいは、JavaScriptで和暦を得る簡単なテクについて）","date":"2022-02-19T02:41:00.000Z","tags":["Unicode"]},"tags":[{"name":"Unicode","kind":"tag","urlPath":"/mono/Unicode"}],"isEmpty":false},{"name":"Emacs: まだターミナルで消耗してるの？","nameSegmented":["Emacs: まだ","ターミナルで","消耗してるの？"],"kind":"note","urlPath":"/notes/tramp-mode","historyURL":"https://github.com/kissge/yo.eki.do/commits/master/notes/tramp-mode.md","lastModified":"2022-06-11T07:33:39.000Z","attributes":{"from":"wordpress","title":"Emacs: まだターミナルで消耗してるの？","date":"2015-12-04T23:00:02.000Z","tags":["アドベントカレンダー"]},"tags":[{"name":"アドベントカレンダー","kind":"tag","urlPath":"/mono/%E3%82%A2%E3%83%89%E3%83%99%E3%83%B3%E3%83%88%E3%82%AB%E3%83%AC%E3%83%B3%E3%83%80%E3%83%BC"}],"isEmpty":false}]},"one_hop_アドベントカレンダー":{"urlPath":"/mono/%E3%82%A2%E3%83%89%E3%83%99%E3%83%B3%E3%83%88%E3%82%AB%E3%83%AC%E3%83%B3%E3%83%80%E3%83%BC","entities":[{"name":"PDFと、出版社と、私","nameSegmented":["PDFと、","出版社と、","私"],"kind":"note","urlPath":"/notes/pdf-publisher-and-me","historyURL":"https://github.com/kissge/yo.eki.do/commits/master/notes/pdf-publisher-and-me.md","lastModified":"2022-09-04T05:58:48.000Z","attributes":{"title":"PDFと、出版社と、私","date":"2021-12-23T05:00:00.000Z","tags":["アドベントカレンダー","LegalTech"]},"tags":[{"name":"アドベントカレンダー","kind":"tag","urlPath":"/mono/%E3%82%A2%E3%83%89%E3%83%99%E3%83%B3%E3%83%88%E3%82%AB%E3%83%AC%E3%83%B3%E3%83%80%E3%83%BC"},{"name":"LegalTech","kind":"tag","urlPath":"/mono/LegalTech"}],"isEmpty":false},{"name":"リーガルリサーチシステム「Legalscape」の技術スタック2021","nameSegmented":["リーガルリサーチシステム","「Legalscape」の","技術スタック","2021"],"kind":"note","urlPath":"/notes/legalscape-tech-stack","historyURL":"https://github.com/kissge/yo.eki.do/commits/master/notes/legalscape-tech-stack.md","lastModified":"2022-06-11T07:33:39.000Z","attributes":{"title":"リーガルリサーチシステム「Legalscape」の技術スタック2021","date":"2021-12-02T00:00:00.000Z","tags":["アドベントカレンダー"]},"tags":[{"name":"アドベントカレンダー","kind":"tag","urlPath":"/mono/%E3%82%A2%E3%83%89%E3%83%99%E3%83%B3%E3%83%88%E3%82%AB%E3%83%AC%E3%83%B3%E3%83%80%E3%83%BC"}],"isEmpty":false},{"name":"来年こそは届いてほしいスマートグラス「Vue」","nameSegmented":["来年","こそは","届いて","ほしい","スマートグラス","「Vue」"],"kind":"note","urlPath":"/notes/crowdfunding-vue","historyURL":"https://github.com/kissge/yo.eki.do/commits/master/notes/crowdfunding-vue.md","lastModified":"2022-06-11T07:34:19.000Z","attributes":{"from":"wordpress","title":"来年こそは届いてほしいスマートグラス「Vue」","date":"2018-12-13T00:17:07.000Z","tags":["アドベントカレンダー"]},"tags":[{"name":"アドベントカレンダー","kind":"tag","urlPath":"/mono/%E3%82%A2%E3%83%89%E3%83%99%E3%83%B3%E3%83%88%E3%82%AB%E3%83%AC%E3%83%B3%E3%83%80%E3%83%BC"}],"isEmpty":false},{"name":"Emacs: まだターミナルで消耗してるの？","nameSegmented":["Emacs: まだ","ターミナルで","消耗してるの？"],"kind":"note","urlPath":"/notes/tramp-mode","historyURL":"https://github.com/kissge/yo.eki.do/commits/master/notes/tramp-mode.md","lastModified":"2022-06-11T07:33:39.000Z","attributes":{"from":"wordpress","title":"Emacs: まだターミナルで消耗してるの？","date":"2015-12-04T23:00:02.000Z","tags":["アドベントカレンダー"]},"tags":[{"name":"アドベントカレンダー","kind":"tag","urlPath":"/mono/%E3%82%A2%E3%83%89%E3%83%99%E3%83%B3%E3%83%88%E3%82%AB%E3%83%AC%E3%83%B3%E3%83%80%E3%83%BC"}],"isEmpty":false},{"name":"Emacs: re-builder + foreign-regexp.elでたのしい正規表現","nameSegmented":["Emacs: ","re","-builder"," +"," foreign","-regexp.","elで","たのしい","正規表現"],"kind":"note","urlPath":"/notes/foreign-regexp-el","historyURL":"https://github.com/kissge/yo.eki.do/commits/master/notes/foreign-regexp-el.md","lastModified":"2022-06-11T07:52:23.000Z","attributes":{"from":"wordpress","title":"Emacs: re-builder + foreign-regexp.elでたのしい正規表現","date":"2014-12-19T23:30:53.000Z","tags":["アドベントカレンダー"]},"tags":[{"name":"アドベントカレンダー","kind":"tag","urlPath":"/mono/%E3%82%A2%E3%83%89%E3%83%99%E3%83%B3%E3%83%88%E3%82%AB%E3%83%AC%E3%83%B3%E3%83%80%E3%83%BC"}],"isEmpty":false}]},"one_hop_Emacs: まだターミナルで消耗してるの？":{"urlPath":"/notes/tramp-mode","entities":[]},"one_hop_コミット・タグを指定してその時点でのツリーだけをgit cloneしてくる":{"urlPath":"/notes/git-only-single-commit","entities":[]}},"isEmpty":false}}