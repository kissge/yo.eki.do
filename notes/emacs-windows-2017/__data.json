{"type":"data","nodes":[null,{"type":"data","data":[{"entity":1},{"name":2,"nameSegmented":3,"kind":7,"urlPath":8,"historyURL":9,"lastModified":10,"attributes":11,"tags":16,"body":20,"headline":21,"links":22,"isEmpty":70},"Emacs: Windowsでやっていく2017",[4,5,6],"Emacs: Windowsで","やっていく","2017","note","/notes/emacs-windows-2017","https://github.com/kissge/yo.eki.do/commits/master/notes/emacs-windows-2017.md",["Date","2022-07-02T05:00:46.000Z"],{"from":12,"title":2,"date":13,"tags":14},"wordpress",["Date","2017-12-08T00:00:08.000Z"],[15],"アドベントカレンダー",[17],{"name":15,"kind":18,"urlPath":19},"tag","/mono/%E3%82%A2%E3%83%89%E3%83%99%E3%83%B3%E3%83%88%E3%82%AB%E3%83%AC%E3%83%B3%E3%83%80%E3%83%BC","\u003Cp>この記事は\u003Ca href=\"https://qiita.com/advent-calendar/2017/emacs\">Emacs Advent Calendar 2017\u003C/a>の第8日目の記事として書かれました。第7日目は\u003Ca href=\"https://qiita.com/yynozk\">yynozk\u003C/a>さんによる「\u003Ca href=\"https://qiita.com/yynozk/items/36a590b49a9237907335\">Emacs の org-mode は表計算もできてしまう\u003C/a>」です。第9日目は\u003Ca href=\"https://qiita.com/tm_tn\">tm_tn\u003C/a>さんによる記事の予定です。「何か書きます」とのこと。\u003C/p>\n\u003C!--more-->\n\n\u003Cp>また騙されて\u003Ca href=\"/mono/Windows\" class=\"monolog-link\"  title=\"Windows\">Windows\u003C/a>に戻ってきてしまった。\u003C/p>\n\u003Cp>先日買ったノートパソコンはMicrosoft Surface Book 2である。性能も申し分ないし、タッチスクリーンの完成度は最高。てか267 dpiて。うちにある外付けモニタが馬鹿みたいに見えてしまって逆に困るレベルである。とは言え誤算がひとつだけあって、このサーフェスブックにはマッキントッシュは入らないらしい。これでは★一つしかつけられそうにない。インタネーットの情報では入ると聞いていたのだが、よくよく見てみるとSurface Bookの話であった。これはSurface Book 2。そのあたりで差が出たのだと思う。\u003C/p>\n\u003Cp>冗談はさておき、しかし\u003Ca href=\"/mono/Windows\" class=\"monolog-link\"  title=\"Windows\">Windows\u003C/a>も悪くないものだ。\u003Ca href=\"/mono/Windows\" class=\"monolog-link\"  title=\"Windows\">Windows\u003C/a>上で\u003Ca href=\"/mono/Emacs\" class=\"monolog-link\"  title=\"Emacs\">Emacs\u003C/a>ユーザとしてやっていくことに関しては、もう5年以上のキャリアがある。昔はUbuntu VM (VirtualBox) とX転送で頑張ったり、前C++とMSBuildでOSを書いていた時は普通に\u003Ca href=\"/mono/Windows\" class=\"monolog-link\"  title=\"Windows\">Windows\u003C/a>版のGNU \u003Ca href=\"/mono/Emacs\" class=\"monolog-link\"  title=\"Emacs\">Emacs\u003C/a>を使ったりしていたが、今回は最近めでたく正式リリースになった\u003Ca href=\"/mono/Windows\" class=\"monolog-link\"  title=\"Windows\">Windows\u003C/a> Subsystem for Linux (WSL, 通称Bash on Ubuntu on \u003Ca href=\"/mono/Windows\" class=\"monolog-link\"  title=\"Windows\">Windows\u003C/a>) を使って快適な作業環境を構築したいと思う。\u003C/p>\n\u003Ch2 id=\"1-wslをセットアップする\">1. WSLをセットアップする\u003C/h2>\n\u003Cp>WSLが何であるか、どうやってセットアップするかについてはインターネットで検索してもらいたい。今回は初めてのインストールなのでBeta版を削除するなどの些細なことは気にしなくて良い。とにかくMicrosoft Storeでアプリを導入するのと同じ感覚でUbuntuが使えるようになる。すばらしい。\u003C/p>\n\u003Ch2 id=\"2-emacsを導入する\">2. \u003Ca href=\"/mono/Emacs\" class=\"monolog-link\"  title=\"Emacs\">Emacs\u003C/a>を導入する\u003C/h2>\n\u003Cp>さて、無事Ubuntu 16.04.3が導入された。早速\u003Ca href=\"/mono/Emacs\" class=\"monolog-link\"  title=\"Emacs\">Emacs\u003C/a>を導入したいが、どのバージョンを導入するか考える必要がある。\u003C/p>\n\u003Cp>\u003Ca href=\"/mono/Emacs\" class=\"monolog-link\"  title=\"Emacs\">Emacs\u003C/a> 24で満足できる人は、何も考えずに\u003Ccode>apt install emacs\u003C/code>するだけで無事\u003Ca href=\"/mono/Emacs\" class=\"monolog-link\"  title=\"Emacs\">Emacs\u003C/a>が導入できる。\u003C/p>\n\u003Cp>\u003Ca href=\"/mono/Emacs\" class=\"monolog-link\"  title=\"Emacs\">Emacs\u003C/a> 25を導入したい場合は、いろいろ手段はあるがkelleykのPPMを追加するのが一番簡単だろう。\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-sh\">add-apt-repository ppa:kelleyk/emacs\napt update\napt install emacs25\n\u003C/code>\u003C/pre>\n\u003Cp>\u003Ca href=\"/mono/Emacs\" class=\"monolog-link\"  title=\"Emacs\">Emacs\u003C/a> 27を導入したいなら、Ubunt \u003Ca href=\"/mono/Emacs\" class=\"monolog-link\"  title=\"Emacs\">Emacs\u003C/a> Lisp teamの公開している\u003Ca href=\"https://launchpad.net/~ubuntu-elisp/+archive/ubuntu/ppa\">PPM\u003C/a>でemacs-snapshotを追加することになるだろうか。開発中のバージョンであり高い頻度で更新される。\u003C/p>\n\u003Cp>\u003Ca href=\"/mono/Emacs\" class=\"monolog-link\"  title=\"Emacs\">Emacs\u003C/a> 26を導入するとなると、もうビルドするしかないのではないか？\n幸い最近のWSLはかなり安定してきておりdependencyを正しく導入すると問題なくビルドできる。\u003Ca href=\"/mono/Emacs\" class=\"monolog-link\"  title=\"Emacs\">Emacs\u003C/a>のソースを管理するgitレポジトリは巨大なのでfetchを最小限に抑えるとかなり時間短縮になる (cf. \u003Ca href=\"/notes/git-only-single-commit\" class=\"monolog-link\" >コミット・タグを指定してその時点でのツリーだけをgit cloneしてくる | 葉月夜堂\u003C/a>)。dependencyの導入まで合わせて、こんな感じ。\u003C/p>\n\u003Cx-script src=\"https://gist.github.com/kissge/e925a60437aacac5475673c70bc496e8.js\">\u003C/x-script>\u003Ch2 id=\"3-xサーバを導入する\">3. Xサーバを導入する\u003C/h2>\n\u003Cp>最後にXサーバを導入すると完璧だ。もちろんターミナルさえあれば何もいらないというハードコアな諸兄にとっては不要だろう。しかし、GUIのほうが使える操作が増えるし使いやすいので個人的にはここまでおすすめしたい。\u003C/p>\n\u003Cp>以前はXmingのフリー版 (Public Domain Release) かCygwin/Xらへんが定番だったような気がする。調べたところVcxsrvかXmingの寄付版 (フリー版はこの\u003Ca href=\"/mono/%E3%82%BD%E3%83%95%E3%83%88%E3%82%A6%E3%82%A7%E3%82%A2\" class=\"monolog-link\"  title=\"ソフトウェア\">ソフトウェア\u003C/a>の10年前のバージョン) を使うのが今風のようである。初めて名前を聞くので今回は\u003Ca href=\"https://sourceforge.net/projects/vcxsrv/\">Vcxsrv\u003C/a>を導入してみたが、今のところ全く不安定さを感じる場面は無い。GitHubを見ると更新が2年止まっているように見えるが、Sourceforgeではかなりアクティブにリリースされているようだ。\u003C/p>\n\u003Cp>\u003Cstrong>追記 (12/10)\u003C/strong>: VcXsrvを起動中にディスプレイの一つを切断するとVcXsrvがクラッシュすることがあるような気がします。\u003C/p>\n\u003Cp>さて、ここまでセットアップを終えると無事GUI版の\u003Ca href=\"/mono/Emacs\" class=\"monolog-link\"  title=\"Emacs\">Emacs\u003C/a>が使えるようになっているはずである。\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-sh\">DISPLAY=:0 emacs\n\u003C/code>\u003C/pre>\n\u003Cfigure>\u003Cimg src=\"/images/uploads/2017/12/emacs1.png\" alt=\"\">\u003C/figure>\u003Cp>ここからはもう少し細かいカスタマイズをしていく。\u003C/p>\n\u003Ch2 id=\"スケーリング設定を切る\">スケーリング設定を切る\u003C/h2>\n\u003Cp>さて、Surface Book 2はいわゆるhigh-DPIディスプレイである。あまりに1ピクセル（\u003Ca href=\"/mono/%E3%82%BD%E3%83%95%E3%83%88%E3%82%A6%E3%82%A7%E3%82%A2\" class=\"monolog-link\"  title=\"ソフトウェア\">ソフトウェア\u003C/a>から見た）の寸法（人間の目から見た）が小さすぎるので、工場出荷時にはスケーリングが200%に設定されている。一方Vcxsrvは（ざっくり言うと）X転送ということでクライアント (Linux) 側でレンダリングされたビットマップを\u003Ca href=\"/mono/Windows\" class=\"monolog-link\"  title=\"Windows\">Windows\u003C/a>上で表示するということをしている。Vcxsrvの描画するウィンドウは\u003Ca href=\"/mono/Windows\" class=\"monolog-link\"  title=\"Windows\">Windows\u003C/a>のスケーリングをかけると単に画像が大きくなってしまってあまり見栄えがよろしくない、ということになる（ざっくり言うと）。というわけでVcxsrv.exeを適切に設定してこのスケーリング設定を無効化してしまおう。まずVcxsrv.exeのプロパティを表示する。ファイル自体は、Vcxsrvへのショートカットを右クリックして “Open file location” するのを繰り返して探し出すか、おそらくは\u003Ccode>C:\\Program Files\\VcXsrv\u003C/code>にあるだろうから直接探す。そして “Compatibility” タブの “Override high DPI scaling behavior. Scaling performed by:” の項目を “Application” に変えてしまえばOK。\u003C/p>\n\u003Cfigure>\u003Cimg src=\"/images/uploads/2017/12/emacs4.png\" alt=\"\">\u003C/figure>\u003Cp>\u003Cstrong>追記 (12/10)\u003C/strong>: これ、やるのとやらないのでどちらが「きれい」か、あまり自明ではないですね。試行錯誤中です。切るとタイトルバーが馬鹿みたいに大きくなるのが癪なので再び有効にしてみているところ。\u003C/p>\n\u003Ch2 id=\"いい感じの日本語フォントを導入する\">いい感じの\u003Ca href=\"/mono/%E6%97%A5%E6%9C%AC%E8%AA%9E\" class=\"monolog-link\"  title=\"日本語\">日本語\u003C/a>フォントを導入する\u003C/h2>\n\u003Cp>何もしなくても\u003Ca href=\"/mono/%E6%97%A5%E6%9C%AC%E8%AA%9E\" class=\"monolog-link\"  title=\"日本語\">日本語\u003C/a>は表示されるはずである。が、句読点の位置が中国語のそれだったり、ちょっといまいち。導入の手軽さもこみでGoogle/Adobe謹製のNotoフォントをおすすめする。X転送ってどっちにフォント入れればいいのか忘れるけれど、今どきはとりあえずクライアント (Linux) 側ということになっている。というわけでインストールはaptで簡単に。\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-sh\">apt install fonts-noto-cjk\n\u003C/code>\u003C/pre>\n\u003Cp>\u003Ca href=\"/mono/Emacs\" class=\"monolog-link\"  title=\"Emacs\">Emacs\u003C/a>のほうはこんな感じで設定を。\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-lisp\">(\u003Cspan class=\"hljs-name\">set-fontset-font\u003C/span> \u003Cspan class=\"hljs-string\">&quot;fontset-default&quot;\u003C/span> &#x27;japanese-jisx0208 &#x27;(\u003Cspan class=\"hljs-string\">&quot;Noto Sans CJK JP Medium&quot;\u003C/span> . \u003Cspan class=\"hljs-string\">&quot;iso10646-1&quot;\u003C/span>))\n\u003C/code>\u003C/pre>\n\u003Ch2 id=\"日本語入力\">\u003Ca href=\"/mono/%E6%97%A5%E6%9C%AC%E8%AA%9E\" class=\"monolog-link\"  title=\"日本語\">日本語\u003C/a>入力\u003C/h2>\n\u003Cp>表示ときたら次は入力。今回も使い慣れたmozc (Google\u003Ca href=\"/mono/%E6%97%A5%E6%9C%AC%E8%AA%9E\" class=\"monolog-link\"  title=\"日本語\">日本語\u003C/a>入力のオープンソース版)　とemacs-mozc-binでいく。まずターミナルでサーバをインストールする。\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-sh\">apt install emacs-mozc-bin\n\u003C/code>\u003C/pre>\n\u003Cp>\u003Ca href=\"/mono/Emacs\" class=\"monolog-link\"  title=\"Emacs\">Emacs\u003C/a>側ではまず\u003Ca href=\"https://raw.githubusercontent.com/google/mozc/master/src/unix/emacs/mozc.el\">mozc.el\u003C/a>を手に入れ、\u003Ccode>load-path\u003C/code>の通っているディレクトリに置く。そして\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-lisp\">(\u003Cspan class=\"hljs-name\">setq\u003C/span> default-input-method \u003Cspan class=\"hljs-string\">&quot;japanese-mozc&quot;\u003C/span>)\n(\u003Cspan class=\"hljs-name\">require\u003C/span> &#x27;mozc)\n\u003C/code>\u003C/pre>\n\u003Cp>あとは\u003Ccode>M-x toggle-input-method\u003C/code>でIMEのオンオフが切り替えられる。好みに応じて\u003Ccode>global-set-key\u003C/code>しておこう。ちなみに全角半角キーは\u003Ccode>(kbd &quot;&lt;zenkaku-hankaku&gt;&quot;)\u003C/code>で指定できる。\u003C/p>\n\u003Cp>蛇足だが個人的に気に入っているのでgnome-terminalも導入した（めちゃくちゃdependencyが多かった）。こちらの\u003Ca href=\"/mono/%E6%97%A5%E6%9C%AC%E8%AA%9E\" class=\"monolog-link\"  title=\"日本語\">日本語\u003C/a>入力はいつものUbuntuと同じとはいかない。残念ながらibusはうまく動かないようである。今回は妥協してuim-fepとanthyを使うことにした。こんな感じでターミナルの一番下の行を1行占領してしまうが、しょうがない。\u003C/p>\n\u003Cfigure>\u003Cimg src=\"/images/uploads/2017/12/emacs2.png\" alt=\"\">\u003C/figure>\u003Cp>gnome-terminalの設定で、起動するシェルをuim-fepにしておこう。.bashrcで呼び出すように設定しても良いが、二重起動しないようにいろいろ頭を使うのが面倒だった。\u003Ca href=\"/mono/Emacs\" class=\"monolog-link\"  title=\"Emacs\">Emacs\u003C/a>の\u003Ccode>shell\u003C/code>などで起動しないで欲しいという理由もある。\u003C/p>\n\u003Ch2 id=\"windowsから直接emacsを起動する\">\u003Ca href=\"/mono/Windows\" class=\"monolog-link\"  title=\"Windows\">Windows\u003C/a>から直接\u003Ca href=\"/mono/Emacs\" class=\"monolog-link\"  title=\"Emacs\">Emacs\u003C/a>を起動する\u003C/h2>\n\u003Cp>さて、毎回\u003Ca href=\"/mono/Emacs\" class=\"monolog-link\"  title=\"Emacs\">Emacs\u003C/a>を起動するためにWSLのターミナルを呼び出すのは面倒くさい。\u003Ca href=\"/mono/Windows\" class=\"monolog-link\"  title=\"Windows\">Windows\u003C/a>からWSL上のコマンドを実行するのは簡単だ。\u003Ca href=\"/mono/Windows\" class=\"monolog-link\"  title=\"Windows\">Windows\u003C/a> + Rキーで開くファイル名を指定して実行 (Run) ダイアログなどからbashを呼び出すだけで良い。\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-sh\">bash -c \u003Cspan class=\"hljs-string\">&quot;DISPLAY=:0 emacs&quot;\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Cp>しかし、これだと「黒画面」が表示しっぱなしになってしまう。\u003Ca href=\"/mono/Emacs\" class=\"monolog-link\"  title=\"Emacs\">Emacs\u003C/a>が終了するまでbash.exeのウィンドウが裏に表示されたままになってしまうのである。そこでひと工夫加えてこうすれば良い。\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-sh\">bash -c \u003Cspan class=\"hljs-string\">&quot;DISPLAY=:0 emacs &amp;&quot;\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Cp>良い……んじゃないかと思う。自分のショートカット見たらこれじゃなくてrun.exe使ってて、あれ、&amp;じゃダメな理由あったんだっけ……忘れた……。\u003C/p>\n\u003Cp>ついでに、起動時のデフォルトディレクトリが変なディレクトリになって気に入らないので\u003Ccode>bash -c &quot;cd; DISPLAY=:0 emacs &amp;&quot;\u003C/code>などとしてしまっても良い。\u003C/p>\n\u003Cp>言うまでもないことだがGUIウィンドウを使いたければXサーバが立っている必要がある。\u003Ca href=\"/mono/Windows\" class=\"monolog-link\"  title=\"Windows\">Windows\u003C/a>の起動時に自動で起動するようにするのが簡単だろう。エクスプローラのアドレスバーで\u003Ccode>shell:startup\u003C/code>と指定すると開くディレクトリにVcxsrvへのショートカットを置くだけである。\u003C/p>\n\u003Ch2 id=\"もちろんtramp-modeも使え\">もちろんtramp-modeも使え……\u003C/h2>\n\u003Cp>これで概ね開発環境は整った！\nあとはSSHの設定を適切に行いいつものようにtramp-modeで開発用のLinuxサーバのファイルを編集するだけである (cf. \u003Ca href=\"/notes/tramp-mode\" class=\"monolog-link\" >Emacs: まだターミナルで消耗してるの？ | 葉月夜堂\u003C/a>)。\u003C/p>\n\u003Cp>が、ここで重大な問題が発生する。\u003C/p>\n\u003Cp>tramp-modeを使ってリモートファイルを編集し保存しようとすると、”Decoding remote file `xxxx’ using `xxxx’” のところで\u003Ca href=\"/mono/Emacs\" class=\"monolog-link\"  title=\"Emacs\">Emacs\u003C/a>がハングしてしまうのである。おまけに編集中のファイルは消滅してしまう。最悪だ。\u003C/p>\n\u003Cp>うーん…………。WSL, sshfsもまだ使えないみたいだし……。\u003C/p>\n\u003Cp>うーん…………。\u003C/p>\n\u003Cp>\u003Ca href=\"/mono/Emacs\" class=\"monolog-link\"  title=\"Emacs\">Emacs\u003C/a>やめるか……。\u003C/p>\n\u003Cp>　\n　\n　\n　\n　\n　\u003C/p>\n\u003Cp>というわけで他のエディタを導入してみる。実を言うと時代遅れの\u003Ca href=\"/mono/Emacs\" class=\"monolog-link\"  title=\"Emacs\">Emacs\u003C/a>なんてはやく辞めたかったのである。時代はElectron製イケてるエディタやな！！\u003C/p>\n\u003Cp>　\n　\n　\n　\n　\n　\u003C/p>\n\u003Cp>が、やっぱりダメ。エディタを起動したらまず\u003Ccode>find-file\u003C/code>したい。GUIのファイルオープンダイアログなんか使いたくない。プロジェクトにファイルがありませんじゃない。IDEじゃなくてエディタが欲しいんだよ。\u003C/p>\n\u003Cp>てかリモートファイル編集がないって何？&#128162;\nファイルをダウンロードして編集して保存してアップロードするのか？sshしてターミナルで操作の限定された状況でファイルを編集するのか？サーバを立てるごとに環境構築して？\n21世紀なのに？え？\u003C/p>\n\u003Cp>というわけでやっぱり\u003Ca href=\"/mono/Emacs\" class=\"monolog-link\"  title=\"Emacs\">Emacs\u003C/a>を使うしか無い（個人の感想です）という結論に。個人の感想ですよ。Atomの\u003Ca href=\"https://atom.io/packages/ftp-remote-edit\">ftp-remote-edit\u003C/a>はいい線いってると思いますよ。\u003C/p>\n\u003Cp>　\n　\n　\n　\n　\n　\u003C/p>\n\u003Cp>ともかく気を取り直して頑張ってtramp-modeをデバッグする。どうやら\u003Ca href=\"/mono/Emacs\" class=\"monolog-link\"  title=\"Emacs\">Emacs\u003C/a> 25, 26, 27いずれも同様の問題があるらしいことがわかった。（蛇足だが\u003Ca href=\"/mono/Emacs\" class=\"monolog-link\"  title=\"Emacs\">Emacs\u003C/a> 26, 27だとGUIで文字が描画されず使い物にならなかった……gtk+ 2, 3両方試してもダメ。あとtrampもファイルを開くたびになんかエラー出る）\u003C/p>\n\u003Cp>基本通りedebugをアタッチしてみると、\u003Ccode>process-send-string\u003C/code>でbase64エンコードした文字列を送りリモートシェルでデコードする部分で処理が止まってしまうことがわかる。この問題は比較的小さいファイルを編集するときには起きないようだ。そこで、一回に送る文字列の長さを制限してみる。\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-lisp\">(\u003Cspan class=\"hljs-name\">custom-set-variables\u003C/span> &#x27;(tramp-chunksize \u003Cspan class=\"hljs-number\">1024\u003C/span>))\n\u003C/code>\u003C/pre>\n\u003Cp>数字は適当である。が、これがうまくいった。とりあえず今のところ問題は再発していない（10240はダメだった）。\u003C/p>\n\u003Cp>一応\u003Ccode>tramp-chunksize\u003C/code>をいじるのはWSL上だけに制限しておこう。WSLかどうか判定するのはこういう感じで。\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-lisp\">(\u003Cspan class=\"hljs-name\">string-match-p\u003C/span> \u003Cspan class=\"hljs-string\">&quot;Microsoft&quot;\u003C/span> (\u003Cspan class=\"hljs-name\">shell-command-to-string\u003C/span> \u003Cspan class=\"hljs-string\">&quot;uname -r&quot;\u003C/span>))\n\u003C/code>\u003C/pre>\n\u003Cp>というわけでどうにか開発環境として日常的に使えるように出来た。これが\u003Ca href=\"/mono/Emacs\" class=\"monolog-link\"  title=\"Emacs\">Emacs\u003C/a>の問題だったのかtramp-modeなのかWSLなのか、よくわからない。どこかに報告したほうがいいのかもしれない。いずれにせよこれでコードが書ける。よかった。\u003C/p>\n\u003Cp>大変なこともあったけど、2017年現在、\u003Ca href=\"/mono/Windows\" class=\"monolog-link\"  title=\"Windows\">Windows\u003C/a>でやっていけそうです。しかも（一応）案外簡単に。\u003C/p>\n\u003Cfigure>\u003Cimg src=\"/images/uploads/2017/12/emacs3.png\" alt=\"\">\u003C/figure>\u003Cp>また\u003Ca href=\"/mono/Emacs\" class=\"monolog-link\"  title=\"Emacs\">Emacs\u003C/a>を卒業しそびれてしまったねえ。\u003C/p>\n","この記事はEmacs Advent Calendar 2017の第8日目の記事として書かれました。第7日目はyynozkさんによる「Emacs の org-mode は表計算もできてしまう」です。第9日目はtm_tnさんによる記事の予定です。「何か書きます」とのこと。また騙されてWindowsに戻ってきてしまった。先日買ったノートパソコンはMicrosoft Surface Book 2である。性能も申し分ないし、タッチスクリーンの完成度は最高。てか267 dpiて。うちにある外付けモニタが馬鹿みたいに見えてしまって逆に困るレベルである。とは言え誤算がひとつだけあって、このサーフェスブックにはマッキントッシュは入らないらしい。これでは★一つしかつけられそうにない。インタネーットの情報では入ると聞いていたのだが、よくよく見てみるとSurface Bookの話であった。これはSurface Book 2。そのあたりで差が出たのだと思う。冗談はさておき、しかしWindowsも悪くないものだ。Windows上でEmacsユーザとしてやっていくことに関しては、もう5年以上のキャリアがある。昔はUbuntu VM (Vi",{"to":23,"one_hop_ソフトウェア":86,"one_hop_日本語":116,"one_hop_アドベントカレンダー":170,"one_hop_Windows":217,"one_hop_Emacs":345,"one_hop_Emacs: まだターミナルで消耗してるの？":390},{"urlPath":8,"entities":24},[25,32,37,40,48,56,71],{"name":26,"nameSegmented":27,"kind":28,"urlPath":29,"tags":30,"isEmpty":31},"ソフトウェア",[26],"kind","/mono/%E3%82%BD%E3%83%95%E3%83%88%E3%82%A6%E3%82%A7%E3%82%A2",[],true,{"name":33,"nameSegmented":34,"kind":18,"urlPath":35,"tags":36,"isEmpty":31},"日本語",[33],"/mono/%E6%97%A5%E6%9C%AC%E8%AA%9E",[],{"name":15,"nameSegmented":38,"kind":18,"urlPath":19,"tags":39,"isEmpty":31},[15],[],{"name":41,"nameSegmented":42,"kind":26,"urlPath":43,"historyURL":44,"lastModified":45,"attributes":46,"tags":47,"isEmpty":31},"Windows",[41],"/mono/Windows","https://github.com/kissge/yo.eki.do/commits/master/mono/ソフトウェア/Windows.md",["Date","2024-06-01T16:59:04.000Z"],{},[],{"name":49,"nameSegmented":50,"kind":26,"urlPath":51,"historyURL":52,"lastModified":53,"attributes":54,"tags":55,"isEmpty":31},"Emacs",[49],"/mono/Emacs","https://github.com/kissge/yo.eki.do/commits/master/mono/ソフトウェア/Emacs.md",["Date","2024-06-01T16:59:04.000Z"],{},[],{"name":57,"nameSegmented":58,"kind":7,"urlPath":62,"historyURL":63,"lastModified":64,"attributes":65,"tags":68,"isEmpty":70},"Emacs: まだターミナルで消耗してるの？",[59,60,61],"Emacs: まだ","ターミナルで","消耗してるの？","/notes/tramp-mode","https://github.com/kissge/yo.eki.do/commits/master/notes/tramp-mode.md",["Date","2022-06-11T07:33:39.000Z"],{"from":12,"title":57,"date":66,"tags":67},["Date","2015-12-04T23:00:02.000Z"],[15],[69],{"name":15,"kind":18,"urlPath":19},false,{"name":72,"nameSegmented":73,"kind":7,"urlPath":80,"historyURL":81,"lastModified":82,"attributes":83,"tags":85,"isEmpty":70},"コミット・タグを指定してその時点でのツリーだけをgit cloneしてくる",[74,75,76,77,78,79],"コミット・タグを","指定して","その","時点での","ツリーだけを","git cloneしてくる","/notes/git-only-single-commit","https://github.com/kissge/yo.eki.do/commits/master/notes/git-only-single-commit.md",["Date","2022-04-17T12:08:43.000Z"],{"from":12,"title":72,"date":84},["Date","2015-11-10T20:03:33.000Z"],[],{"urlPath":29,"entities":87},[88,99],{"name":89,"nameSegmented":90,"kind":93,"urlPath":94,"historyURL":95,"lastModified":96,"attributes":97,"tags":98,"isEmpty":70},"文字コードの変換",[91,92],"文字コードの","変換","memorandum","/memorandum/%E6%96%87%E5%AD%97%E3%82%B3%E3%83%BC%E3%83%89%E3%81%AE%E5%A4%89%E6%8F%9B","https://github.com/kissge/yo.eki.do/commits/master/memorandum/文字コードの変換.md",["Date","2024-06-02T14:22:28.000Z"],{},[],{"name":100,"nameSegmented":101,"kind":7,"urlPath":105,"historyURL":106,"lastModified":107,"attributes":108,"tags":112,"isEmpty":70},"PDFと、出版社と、私",[102,103,104],"PDFと、","出版社と、","私","/notes/pdf-publisher-and-me","https://github.com/kissge/yo.eki.do/commits/master/notes/pdf-publisher-and-me.md",["Date","2022-09-04T05:58:48.000Z"],{"title":100,"date":109,"tags":110},["Date","2021-12-23T05:00:00.000Z"],[15,111],"LegalTech",[113,114],{"name":15,"kind":18,"urlPath":19},{"name":111,"kind":18,"urlPath":115},"/mono/LegalTech",{"urlPath":35,"entities":117},[118,119,131,143,169],{"name":89,"nameSegmented":90,"kind":93,"urlPath":94,"historyURL":95,"lastModified":96,"attributes":97,"tags":98,"isEmpty":70},{"name":120,"nameSegmented":121,"kind":93,"urlPath":124,"historyURL":125,"lastModified":126,"attributes":127,"tags":129,"isEmpty":70},"リバーシブルな二字熟語",[122,123],"リバーシブルな","二字熟語","/memorandum/%E3%83%AA%E3%83%90%E3%83%BC%E3%82%B7%E3%83%96%E3%83%AB%E3%81%AA%E4%BA%8C%E5%AD%97%E7%86%9F%E8%AA%9E","https://github.com/kissge/yo.eki.do/commits/master/memorandum/リバーシブルな二字熟語.md",["Date","2024-01-28T06:51:56.000Z"],{"tags":128},[33],[130],{"name":33,"kind":18,"urlPath":35},{"name":132,"nameSegmented":133,"kind":7,"urlPath":134,"historyURL":135,"lastModified":136,"attributes":137,"tags":141,"isEmpty":70},"How do Japanese type?",[132],"/notes/how-do-japanese-type","https://github.com/kissge/yo.eki.do/commits/master/notes/how-do-japanese-type.md",["Date","2022-06-11T11:32:30.000Z"],{"title":132,"date":138,"lang":139,"tags":140},["Date","2022-05-29T01:00:00.000Z"],"en",[33],[142],{"name":33,"kind":18,"urlPath":35},{"name":144,"nameSegmented":145,"kind":7,"urlPath":159,"historyURL":160,"lastModified":161,"attributes":162,"tags":166,"isEmpty":70},"ja-JP-u-ca-japaneseって何？ UnicodeのCLDRを読んでみよう（あるいは、JavaScriptで和暦を得る簡単なテクについて）",[146,147,148,149,150,151,152,153,154,155,156,157,158],"ja-JP-u-ca-japaneseって","何？"," Unicodeの","CLDRを","読んで","みよう","（あるいは、","JavaScriptで","和暦を","得る","簡単な","テクに","ついて）","/notes/cldr","https://github.com/kissge/yo.eki.do/commits/master/notes/cldr.md",["Date","2022-06-11T11:32:20.000Z"],{"title":144,"date":163,"tags":164},["Date","2022-02-19T02:41:00.000Z"],[165],"Unicode",[167],{"name":165,"kind":18,"urlPath":168},"/mono/Unicode",{"name":57,"nameSegmented":58,"kind":7,"urlPath":62,"historyURL":63,"lastModified":64,"attributes":65,"tags":68,"isEmpty":70},{"urlPath":19,"entities":171},[172,173,187,202,203],{"name":100,"nameSegmented":101,"kind":7,"urlPath":105,"historyURL":106,"lastModified":107,"attributes":108,"tags":112,"isEmpty":70},{"name":174,"nameSegmented":175,"kind":7,"urlPath":179,"historyURL":180,"lastModified":181,"attributes":182,"tags":185,"isEmpty":70},"リーガルリサーチシステム「Legalscape」の技術スタック2021",[176,177,178],"リーガルリサーチシステム","「Legalscape」の","技術スタック2021","/notes/legalscape-tech-stack","https://github.com/kissge/yo.eki.do/commits/master/notes/legalscape-tech-stack.md",["Date","2022-06-11T07:33:39.000Z"],{"title":174,"date":183,"tags":184},["Date","2021-12-02T00:00:00.000Z"],[15],[186],{"name":15,"kind":18,"urlPath":19},{"name":188,"nameSegmented":189,"kind":7,"urlPath":194,"historyURL":195,"lastModified":196,"attributes":197,"tags":200,"isEmpty":70},"来年こそは届いてほしいスマートグラス「Vue」",[190,191,192,193],"来年こそは","届いて","ほしい","スマートグラス「Vue」","/notes/crowdfunding-vue","https://github.com/kissge/yo.eki.do/commits/master/notes/crowdfunding-vue.md",["Date","2022-06-11T07:34:19.000Z"],{"from":12,"title":188,"date":198,"tags":199},["Date","2018-12-13T00:17:07.000Z"],[15],[201],{"name":15,"kind":18,"urlPath":19},{"name":57,"nameSegmented":58,"kind":7,"urlPath":62,"historyURL":63,"lastModified":64,"attributes":65,"tags":68,"isEmpty":70},{"name":204,"nameSegmented":205,"kind":7,"urlPath":209,"historyURL":210,"lastModified":211,"attributes":212,"tags":215,"isEmpty":70},"Emacs: re-builder + foreign-regexp.elでたのしい正規表現",[206,207,208],"Emacs: re-builder + foreign-regexp.elで","たのしい","正規表現","/notes/foreign-regexp-el","https://github.com/kissge/yo.eki.do/commits/master/notes/foreign-regexp-el.md",["Date","2022-06-11T07:52:23.000Z"],{"from":12,"title":204,"date":213,"tags":214},["Date","2014-12-19T23:30:53.000Z"],[15],[216],{"name":15,"kind":18,"urlPath":19},{"urlPath":43,"entities":218},[219,231,243,257,271,295,304,317,331],{"name":220,"nameSegmented":221,"kind":93,"urlPath":224,"historyURL":225,"lastModified":226,"attributes":227,"tags":229,"isEmpty":70},"Windows 11のセットアップ",[222,223],"Windows 11の","セットアップ","/memorandum/Windows%2011%E3%81%AE%E3%82%BB%E3%83%83%E3%83%88%E3%82%A2%E3%83%83%E3%83%97","https://github.com/kissge/yo.eki.do/commits/master/memorandum/Windows 11のセットアップ.md",["Date","2024-01-28T06:51:56.000Z"],{"tags":228},[41],[230],{"name":41,"kind":18,"urlPath":43},{"name":232,"nameSegmented":233,"kind":7,"urlPath":236,"historyURL":237,"lastModified":238,"attributes":239,"tags":242,"isEmpty":70},"VAIO SX12 ALL BLACK EDITIONを買った",[234,235],"VAIO SX12 ALL BLACK EDITIONを","買った","/notes/vaio-sx12","https://github.com/kissge/yo.eki.do/commits/master/notes/vaio-sx12.md",["Date","2022-12-03T14:52:44.000Z"],{"title":232,"date":240,"header":241},["Date","2022-12-03T14:01:38.000Z"],"https://vaio.com/products/allblack_sx12/images/img_main.png",[],{"name":244,"nameSegmented":245,"kind":7,"urlPath":246,"historyURL":247,"lastModified":248,"attributes":249,"tags":253,"isEmpty":70},"Introduction to Legal NLP",[244],"/notes/lnlp","https://github.com/kissge/yo.eki.do/commits/master/notes/lnlp.md",["Date","2023-03-04T14:34:01.000Z"],{"title":244,"date":250,"lang":139,"slides":31,"tags":251},["Date","2022-09-04T03:30:00.000Z"],[252,111],"NLP",[254,256],{"name":252,"kind":18,"urlPath":255},"/mono/NLP",{"name":111,"kind":18,"urlPath":115},{"name":258,"nameSegmented":259,"kind":7,"urlPath":264,"historyURL":265,"lastModified":266,"attributes":267,"tags":270,"isEmpty":70},"うちのHP Spectre x360 Convertible 13がなんか変",[260,261,262,263],"うちの","HP Spectre x360 Convertible 13が","なんか","変","/notes/hp-spectre-13","https://github.com/kissge/yo.eki.do/commits/master/notes/hp-spectre-13.md",["Date","2022-06-27T06:25:27.000Z"],{"title":258,"date":268,"header":269},["Date","2022-06-26T14:14:13.000Z"],"https://jp.ext.hp.com/content/dam/jp-ext-hp-com/jp/ja/ec/notebooks/personal/spectre/images/design_img_x360_13.jpg",[],{"name":272,"nameSegmented":273,"kind":7,"urlPath":289,"historyURL":290,"lastModified":291,"attributes":292,"tags":294,"isEmpty":70},"ウィンドウをドラッグしたまま画面の端にぐぐぐっと押し付けることで最大化したり画面サイズの半分の大きさに変えたりするやつをOS Xでやる",[274,275,276,277,278,279,280,281,282,283,284,285,286,287,288],"ウィンドウを","ドラッグしたまま","画面の","端に","ぐぐ","ぐっと","押し付ける","ことで","最大化したり画面サイズの","半分の","大きさに","変えたりする","やつを","OS Xで","やる","/notes/maximize-windows-by-dragging-them-to-the-screen-edge-on-osx","https://github.com/kissge/yo.eki.do/commits/master/notes/maximize-windows-by-dragging-them-to-the-screen-edge-on-osx.md",["Date","2022-04-17T12:08:43.000Z"],{"from":12,"title":272,"date":293},["Date","2016-01-12T22:14:29.000Z"],[],{"name":296,"nameSegmented":297,"kind":7,"urlPath":298,"historyURL":299,"lastModified":300,"attributes":301,"tags":303,"isEmpty":70},"マルチブート覚書",[296],"/notes/multiboot","https://github.com/kissge/yo.eki.do/commits/master/notes/multiboot.md",["Date","2022-04-17T12:08:43.000Z"],{"from":12,"title":296,"date":302},["Date","2015-11-03T23:49:51.000Z"],[],{"name":305,"nameSegmented":306,"kind":7,"urlPath":311,"historyURL":312,"lastModified":313,"attributes":314,"tags":316,"isEmpty":70},"二段組みのPDFを読みやすく変換する",[307,308,309,310],"二段組みの","PDFを","読みやすく","変換する","/notes/2-column-pdf","https://github.com/kissge/yo.eki.do/commits/master/notes/2-column-pdf.md",["Date","2022-06-11T07:32:46.000Z"],{"from":12,"title":305,"date":315},["Date","2014-12-10T22:31:22.000Z"],[],{"name":318,"nameSegmented":319,"kind":7,"urlPath":325,"historyURL":326,"lastModified":327,"attributes":328,"tags":330,"isEmpty":70},"Cygwin/X でウィンドウをリサイズしようとすると高さが潰れてしまう",[320,274,321,322,323,324],"Cygwin/X で","リサイズしようと","すると","高さが","潰れてしまう","/notes/window-resize","https://github.com/kissge/yo.eki.do/commits/master/notes/window-resize.md",["Date","2022-04-17T12:08:43.000Z"],{"from":12,"title":318,"date":329},["Date","2014-08-05T04:38:45.000Z"],[],{"name":332,"nameSegmented":333,"kind":7,"urlPath":339,"historyURL":340,"lastModified":341,"attributes":342,"tags":344,"isEmpty":70},"Emacs 24 でクリップボードとの連携が上手くいかなくなった",[334,335,336,337,338],"Emacs 24 で","クリップボードとの","連携が","上手く","いかなくなった","/notes/emacs24","https://github.com/kissge/yo.eki.do/commits/master/notes/emacs24.md",["Date","2022-04-17T12:14:26.000Z"],{"from":12,"title":332,"date":343},["Date","2014-07-23T22:14:19.000Z"],[],{"urlPath":51,"entities":346},[347,363,364,365,377,378,379],{"name":348,"nameSegmented":349,"kind":7,"urlPath":357,"historyURL":358,"lastModified":359,"attributes":360,"tags":362,"isEmpty":70},"jediとかvirtualenvとかがReason: image not foundと言ってぶっ壊れたときの対処",[350,351,352,353,354,355,356],"jediとか","virtualenvとかが","Reason: image not foundと","言って","ぶっ壊れた","ときの","対処","/notes/jedi-virtualenv","https://github.com/kissge/yo.eki.do/commits/master/notes/jedi-virtualenv.md",["Date","2022-04-17T12:08:43.000Z"],{"from":12,"title":348,"date":361},["Date","2016-08-26T00:17:53.000Z"],[],{"name":57,"nameSegmented":58,"kind":7,"urlPath":62,"historyURL":63,"lastModified":64,"attributes":65,"tags":68,"isEmpty":70},{"name":204,"nameSegmented":205,"kind":7,"urlPath":209,"historyURL":210,"lastModified":211,"attributes":212,"tags":215,"isEmpty":70},{"name":366,"nameSegmented":367,"kind":7,"urlPath":371,"historyURL":372,"lastModified":373,"attributes":374,"tags":376,"isEmpty":70},"Emacs: ファイル名補完で「Icon^M」を無視する",[368,369,370],"Emacs: ファイル名補完で","「Icon^M」を","無視する","/notes/emacs-icon-m","https://github.com/kissge/yo.eki.do/commits/master/notes/emacs-icon-m.md",["Date","2022-04-17T12:08:43.000Z"],{"from":12,"title":366,"date":375},["Date","2014-12-16T22:21:21.000Z"],[],{"name":318,"nameSegmented":319,"kind":7,"urlPath":325,"historyURL":326,"lastModified":327,"attributes":328,"tags":330,"isEmpty":70},{"name":332,"nameSegmented":333,"kind":7,"urlPath":339,"historyURL":340,"lastModified":341,"attributes":342,"tags":344,"isEmpty":70},{"name":380,"nameSegmented":381,"kind":7,"urlPath":384,"historyURL":385,"lastModified":386,"attributes":387,"tags":389,"isEmpty":70},"Emacs: git-gutter が便利過ぎる",[382,383],"Emacs: git-gutter が","便利過ぎる","/notes/git-gutter","https://github.com/kissge/yo.eki.do/commits/master/notes/git-gutter.md",["Date","2022-04-17T12:08:43.000Z"],{"from":12,"title":380,"date":388},["Date","2014-07-23T19:15:10.000Z"],[],{"urlPath":62,"entities":391},[]],"uses":{"url":1}}]}
