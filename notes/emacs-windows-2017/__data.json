{"type":"data","nodes":[null,{"type":"data","data":[{"entity":1},{"name":2,"nameSegmented":3,"kind":7,"urlPath":8,"historyURL":9,"lastModified":10,"attributes":11,"tags":16,"body":20,"headline":21,"links":22,"isEmpty":58},"Emacs: Windowsでやっていく2017",[4,5,6],"Emacs: Windowsで","やっていく","2017","note","/notes/emacs-windows-2017","https://github.com/kissge/yo.eki.do/commits/master/notes/emacs-windows-2017.md",["Date","2022-07-02T05:00:46.000Z"],{"from":12,"title":2,"date":13,"tags":14},"wordpress",["Date","2017-12-08T00:00:08.000Z"],[15],"アドベントカレンダー",[17],{"name":15,"kind":18,"urlPath":19},"tag","/mono/%E3%82%A2%E3%83%89%E3%83%99%E3%83%B3%E3%83%88%E3%82%AB%E3%83%AC%E3%83%B3%E3%83%80%E3%83%BC","\u003Cp>この記事は\u003Ca href=\"https://qiita.com/advent-calendar/2017/emacs\">Emacs Advent Calendar 2017\u003C/a>の第8日目の記事として書かれました。第7日目は\u003Ca href=\"https://qiita.com/yynozk\">yynozk\u003C/a>さんによる「\u003Ca href=\"https://qiita.com/yynozk/items/36a590b49a9237907335\">Emacs の org-mode は表計算もできてしまう\u003C/a>」です。第9日目は\u003Ca href=\"https://qiita.com/tm_tn\">tm_tn\u003C/a>さんによる記事の予定です。「何か書きます」とのこと。\u003C/p>\n\u003C!--more-->\n\n\u003Cp>また騙されて\u003Ca href=\"/mono/Windows\" class=\"monolog-link\"  title=\"Windows\">Windows\u003C/a>に戻ってきてしまった。\u003C/p>\n\u003Cp>先日買ったノートパソコンはMicrosoft Surface Book 2である。性能も申し分ないし、タッチスクリーンの完成度は最高。てか267 dpiて。うちにある外付けモニタが馬鹿みたいに見えてしまって逆に困るレベルである。とは言え誤算がひとつだけあって、このサーフェスブックにはマッキントッシュは入らないらしい。これでは★一つしかつけられそうにない。インタネーットの情報では入ると聞いていたのだが、よくよく見てみるとSurface Bookの話であった。これはSurface Book 2。そのあたりで差が出たのだと思う。\u003C/p>\n\u003Cp>冗談はさておき、しかし\u003Ca href=\"/mono/Windows\" class=\"monolog-link\"  title=\"Windows\">Windows\u003C/a>も悪くないものだ。\u003Ca href=\"/mono/Windows\" class=\"monolog-link\"  title=\"Windows\">Windows\u003C/a>上でEmacsユーザとしてやっていくことに関しては、もう5年以上のキャリアがある。昔はUbuntu VM (VirtualBox) とX転送で頑張ったり、前C++とMSBuildでOSを書いていた時は普通に\u003Ca href=\"/mono/Windows\" class=\"monolog-link\"  title=\"Windows\">Windows\u003C/a>版のGNU Emacsを使ったりしていたが、今回は最近めでたく正式リリースになった\u003Ca href=\"/mono/Windows\" class=\"monolog-link\"  title=\"Windows\">Windows\u003C/a> Subsystem for Linux (WSL, 通称Bash on Ubuntu on \u003Ca href=\"/mono/Windows\" class=\"monolog-link\"  title=\"Windows\">Windows\u003C/a>) を使って快適な作業環境を構築したいと思う。\u003C/p>\n\u003Ch2 id=\"1-wslをセットアップする\">1. WSLをセットアップする\u003C/h2>\n\u003Cp>WSLが何であるか、どうやってセットアップするかについてはインターネットで検索してもらいたい。今回は初めてのインストールなのでBeta版を削除するなどの些細なことは気にしなくて良い。とにかくMicrosoft Storeでアプリを導入するのと同じ感覚でUbuntuが使えるようになる。すばらしい。\u003C/p>\n\u003Ch2 id=\"2-emacsを導入する\">2. Emacsを導入する\u003C/h2>\n\u003Cp>さて、無事Ubuntu 16.04.3が導入された。早速Emacsを導入したいが、どのバージョンを導入するか考える必要がある。\u003C/p>\n\u003Cp>Emacs 24で満足できる人は、何も考えずに\u003Ccode>apt install emacs\u003C/code>するだけで無事Emacsが導入できる。\u003C/p>\n\u003Cp>Emacs 25を導入したい場合は、いろいろ手段はあるがkelleykのPPMを追加するのが一番簡単だろう。\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-sh\">add-apt-repository ppa:kelleyk/emacs\napt update\napt install emacs25\n\u003C/code>\u003C/pre>\n\u003Cp>Emacs 27を導入したいなら、Ubunt Emacs Lisp teamの公開している\u003Ca href=\"https://launchpad.net/~ubuntu-elisp/+archive/ubuntu/ppa\">PPM\u003C/a>でemacs-snapshotを追加することになるだろうか。開発中のバージョンであり高い頻度で更新される。\u003C/p>\n\u003Cp>Emacs 26を導入するとなると、もうビルドするしかないのではないか？\n幸い最近のWSLはかなり安定してきておりdependencyを正しく導入すると問題なくビルドできる。Emacsのソースを管理するgitレポジトリは巨大なのでfetchを最小限に抑えるとかなり時間短縮になる (cf. \u003Ca href=\"/notes/git-only-single-commit\" class=\"monolog-link\" >コミット・タグを指定してその時点でのツリーだけをgit cloneしてくる | 葉月夜堂\u003C/a>)。dependencyの導入まで合わせて、こんな感じ。\u003C/p>\n\u003Cx-script src=\"https://gist.github.com/kissge/e925a60437aacac5475673c70bc496e8.js\">\u003C/x-script>\u003Ch2 id=\"3-xサーバを導入する\">3. Xサーバを導入する\u003C/h2>\n\u003Cp>最後にXサーバを導入すると完璧だ。もちろんターミナルさえあれば何もいらないというハードコアな諸兄にとっては不要だろう。しかし、GUIのほうが使える操作が増えるし使いやすいので個人的にはここまでおすすめしたい。\u003C/p>\n\u003Cp>以前はXmingのフリー版 (Public Domain Release) かCygwin/Xらへんが定番だったような気がする。調べたところVcxsrvかXmingの寄付版 (フリー版はこの\u003Ca href=\"/mono/%E3%82%BD%E3%83%95%E3%83%88%E3%82%A6%E3%82%A7%E3%82%A2\" class=\"monolog-link\"  title=\"ソフトウェア\">ソフトウェア\u003C/a>の10年前のバージョン) を使うのが今風のようである。初めて名前を聞くので今回は\u003Ca href=\"https://sourceforge.net/projects/vcxsrv/\">Vcxsrv\u003C/a>を導入してみたが、今のところ全く不安定さを感じる場面は無い。GitHubを見ると更新が2年止まっているように見えるが、Sourceforgeではかなりアクティブにリリースされているようだ。\u003C/p>\n\u003Cp>\u003Cstrong>追記 (12/10)\u003C/strong>: VcXsrvを起動中にディスプレイの一つを切断するとVcXsrvがクラッシュすることがあるような気がします。\u003C/p>\n\u003Cp>さて、ここまでセットアップを終えると無事GUI版のEmacsが使えるようになっているはずである。\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-sh\">DISPLAY=:0 emacs\n\u003C/code>\u003C/pre>\n\u003Cfigure>\u003Cimg src=\"/images/uploads/2017/12/emacs1.png\" alt=\"\">\u003C/figure>\u003Cp>ここからはもう少し細かいカスタマイズをしていく。\u003C/p>\n\u003Ch2 id=\"スケーリング設定を切る\">スケーリング設定を切る\u003C/h2>\n\u003Cp>さて、Surface Book 2はいわゆるhigh-DPIディスプレイである。あまりに1ピクセル（\u003Ca href=\"/mono/%E3%82%BD%E3%83%95%E3%83%88%E3%82%A6%E3%82%A7%E3%82%A2\" class=\"monolog-link\"  title=\"ソフトウェア\">ソフトウェア\u003C/a>から見た）の寸法（人間の目から見た）が小さすぎるので、工場出荷時にはスケーリングが200%に設定されている。一方Vcxsrvは（ざっくり言うと）X転送ということでクライアント (Linux) 側でレンダリングされたビットマップを\u003Ca href=\"/mono/Windows\" class=\"monolog-link\"  title=\"Windows\">Windows\u003C/a>上で表示するということをしている。Vcxsrvの描画するウィンドウは\u003Ca href=\"/mono/Windows\" class=\"monolog-link\"  title=\"Windows\">Windows\u003C/a>のスケーリングをかけると単に画像が大きくなってしまってあまり見栄えがよろしくない、ということになる（ざっくり言うと）。というわけでVcxsrv.exeを適切に設定してこのスケーリング設定を無効化してしまおう。まずVcxsrv.exeのプロパティを表示する。ファイル自体は、Vcxsrvへのショートカットを右クリックして “Open file location” するのを繰り返して探し出すか、おそらくは\u003Ccode>C:\\Program Files\\VcXsrv\u003C/code>にあるだろうから直接探す。そして “Compatibility” タブの “Override high DPI scaling behavior. Scaling performed by:” の項目を “Application” に変えてしまえばOK。\u003C/p>\n\u003Cfigure>\u003Cimg src=\"/images/uploads/2017/12/emacs4.png\" alt=\"\">\u003C/figure>\u003Cp>\u003Cstrong>追記 (12/10)\u003C/strong>: これ、やるのとやらないのでどちらが「きれい」か、あまり自明ではないですね。試行錯誤中です。切るとタイトルバーが馬鹿みたいに大きくなるのが癪なので再び有効にしてみているところ。\u003C/p>\n\u003Ch2 id=\"いい感じの日本語フォントを導入する\">いい感じの\u003Ca href=\"/mono/%E6%97%A5%E6%9C%AC%E8%AA%9E\" class=\"monolog-link\"  title=\"日本語\">日本語\u003C/a>フォントを導入する\u003C/h2>\n\u003Cp>何もしなくても\u003Ca href=\"/mono/%E6%97%A5%E6%9C%AC%E8%AA%9E\" class=\"monolog-link\"  title=\"日本語\">日本語\u003C/a>は表示されるはずである。が、句読点の位置が中国語のそれだったり、ちょっといまいち。導入の手軽さもこみでGoogle/Adobe謹製のNotoフォントをおすすめする。X転送ってどっちにフォント入れればいいのか忘れるけれど、今どきはとりあえずクライアント (Linux) 側ということになっている。というわけでインストールはaptで簡単に。\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-sh\">apt install fonts-noto-cjk\n\u003C/code>\u003C/pre>\n\u003Cp>Emacsのほうはこんな感じで設定を。\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-lisp\">(\u003Cspan class=\"hljs-name\">set-fontset-font\u003C/span> \u003Cspan class=\"hljs-string\">&quot;fontset-default&quot;\u003C/span> &#x27;japanese-jisx0208 &#x27;(\u003Cspan class=\"hljs-string\">&quot;Noto Sans CJK JP Medium&quot;\u003C/span> . \u003Cspan class=\"hljs-string\">&quot;iso10646-1&quot;\u003C/span>))\n\u003C/code>\u003C/pre>\n\u003Ch2 id=\"日本語入力\">\u003Ca href=\"/mono/%E6%97%A5%E6%9C%AC%E8%AA%9E\" class=\"monolog-link\"  title=\"日本語\">日本語\u003C/a>入力\u003C/h2>\n\u003Cp>表示ときたら次は入力。今回も使い慣れたmozc (Google\u003Ca href=\"/mono/%E6%97%A5%E6%9C%AC%E8%AA%9E\" class=\"monolog-link\"  title=\"日本語\">日本語\u003C/a>入力のオープンソース版)　とemacs-mozc-binでいく。まずターミナルでサーバをインストールする。\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-sh\">apt install emacs-mozc-bin\n\u003C/code>\u003C/pre>\n\u003Cp>Emacs側ではまず\u003Ca href=\"https://raw.githubusercontent.com/google/mozc/master/src/unix/emacs/mozc.el\">mozc.el\u003C/a>を手に入れ、\u003Ccode>load-path\u003C/code>の通っているディレクトリに置く。そして\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-lisp\">(\u003Cspan class=\"hljs-name\">setq\u003C/span> default-input-method \u003Cspan class=\"hljs-string\">&quot;japanese-mozc&quot;\u003C/span>)\n(\u003Cspan class=\"hljs-name\">require\u003C/span> &#x27;mozc)\n\u003C/code>\u003C/pre>\n\u003Cp>あとは\u003Ccode>M-x toggle-input-method\u003C/code>でIMEのオンオフが切り替えられる。好みに応じて\u003Ccode>global-set-key\u003C/code>しておこう。ちなみに全角半角キーは\u003Ccode>(kbd &quot;&lt;zenkaku-hankaku&gt;&quot;)\u003C/code>で指定できる。\u003C/p>\n\u003Cp>蛇足だが個人的に気に入っているのでgnome-terminalも導入した（めちゃくちゃdependencyが多かった）。こちらの\u003Ca href=\"/mono/%E6%97%A5%E6%9C%AC%E8%AA%9E\" class=\"monolog-link\"  title=\"日本語\">日本語\u003C/a>入力はいつものUbuntuと同じとはいかない。残念ながらibusはうまく動かないようである。今回は妥協してuim-fepとanthyを使うことにした。こんな感じでターミナルの一番下の行を1行占領してしまうが、しょうがない。\u003C/p>\n\u003Cfigure>\u003Cimg src=\"/images/uploads/2017/12/emacs2.png\" alt=\"\">\u003C/figure>\u003Cp>gnome-terminalの設定で、起動するシェルをuim-fepにしておこう。.bashrcで呼び出すように設定しても良いが、二重起動しないようにいろいろ頭を使うのが面倒だった。Emacsの\u003Ccode>shell\u003C/code>などで起動しないで欲しいという理由もある。\u003C/p>\n\u003Ch2 id=\"windowsから直接emacsを起動する\">\u003Ca href=\"/mono/Windows\" class=\"monolog-link\"  title=\"Windows\">Windows\u003C/a>から直接Emacsを起動する\u003C/h2>\n\u003Cp>さて、毎回Emacsを起動するためにWSLのターミナルを呼び出すのは面倒くさい。\u003Ca href=\"/mono/Windows\" class=\"monolog-link\"  title=\"Windows\">Windows\u003C/a>からWSL上のコマンドを実行するのは簡単だ。\u003Ca href=\"/mono/Windows\" class=\"monolog-link\"  title=\"Windows\">Windows\u003C/a> + Rキーで開くファイル名を指定して実行 (Run) ダイアログなどからbashを呼び出すだけで良い。\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-sh\">bash -c \u003Cspan class=\"hljs-string\">&quot;DISPLAY=:0 emacs&quot;\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Cp>しかし、これだと「黒画面」が表示しっぱなしになってしまう。Emacsが終了するまでbash.exeのウィンドウが裏に表示されたままになってしまうのである。そこでひと工夫加えてこうすれば良い。\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-sh\">bash -c \u003Cspan class=\"hljs-string\">&quot;DISPLAY=:0 emacs &amp;&quot;\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Cp>良い……んじゃないかと思う。自分のショートカット見たらこれじゃなくてrun.exe使ってて、あれ、&amp;じゃダメな理由あったんだっけ……忘れた……。\u003C/p>\n\u003Cp>ついでに、起動時のデフォルトディレクトリが変なディレクトリになって気に入らないので\u003Ccode>bash -c &quot;cd; DISPLAY=:0 emacs &amp;&quot;\u003C/code>などとしてしまっても良い。\u003C/p>\n\u003Cp>言うまでもないことだがGUIウィンドウを使いたければXサーバが立っている必要がある。\u003Ca href=\"/mono/Windows\" class=\"monolog-link\"  title=\"Windows\">Windows\u003C/a>の起動時に自動で起動するようにするのが簡単だろう。エクスプローラのアドレスバーで\u003Ccode>shell:startup\u003C/code>と指定すると開くディレクトリにVcxsrvへのショートカットを置くだけである。\u003C/p>\n\u003Ch2 id=\"もちろんtramp-modeも使え\">もちろんtramp-modeも使え……\u003C/h2>\n\u003Cp>これで概ね開発環境は整った！\nあとはSSHの設定を適切に行いいつものようにtramp-modeで開発用のLinuxサーバのファイルを編集するだけである (cf. \u003Ca href=\"/notes/tramp-mode\" class=\"monolog-link\" >Emacs: まだターミナルで消耗してるの？ | 葉月夜堂\u003C/a>)。\u003C/p>\n\u003Cp>が、ここで重大な問題が発生する。\u003C/p>\n\u003Cp>tramp-modeを使ってリモートファイルを編集し保存しようとすると、”Decoding remote file `xxxx’ using `xxxx’” のところでEmacsがハングしてしまうのである。おまけに編集中のファイルは消滅してしまう。最悪だ。\u003C/p>\n\u003Cp>うーん…………。WSL, sshfsもまだ使えないみたいだし……。\u003C/p>\n\u003Cp>うーん…………。\u003C/p>\n\u003Cp>Emacsやめるか……。\u003C/p>\n\u003Cp>　\n　\n　\n　\n　\n　\u003C/p>\n\u003Cp>というわけで他のエディタを導入してみる。実を言うと時代遅れのEmacsなんてはやく辞めたかったのである。時代はElectron製イケてるエディタやな！！\u003C/p>\n\u003Cp>　\n　\n　\n　\n　\n　\u003C/p>\n\u003Cp>が、やっぱりダメ。エディタを起動したらまず\u003Ccode>find-file\u003C/code>したい。GUIのファイルオープンダイアログなんか使いたくない。プロジェクトにファイルがありませんじゃない。IDEじゃなくてエディタが欲しいんだよ。\u003C/p>\n\u003Cp>てかリモートファイル編集がないって何？&#128162;\nファイルをダウンロードして編集して保存してアップロードするのか？sshしてターミナルで操作の限定された状況でファイルを編集するのか？サーバを立てるごとに環境構築して？\n21世紀なのに？え？\u003C/p>\n\u003Cp>というわけでやっぱりEmacsを使うしか無い（個人の感想です）という結論に。個人の感想ですよ。Atomの\u003Ca href=\"https://atom.io/packages/ftp-remote-edit\">ftp-remote-edit\u003C/a>はいい線いってると思いますよ。\u003C/p>\n\u003Cp>　\n　\n　\n　\n　\n　\u003C/p>\n\u003Cp>ともかく気を取り直して頑張ってtramp-modeをデバッグする。どうやらEmacs 25, 26, 27いずれも同様の問題があるらしいことがわかった。（蛇足だがEmacs 26, 27だとGUIで文字が描画されず使い物にならなかった……gtk+ 2, 3両方試してもダメ。あとtrampもファイルを開くたびになんかエラー出る）\u003C/p>\n\u003Cp>基本通りedebugをアタッチしてみると、\u003Ccode>process-send-string\u003C/code>でbase64エンコードした文字列を送りリモートシェルでデコードする部分で処理が止まってしまうことがわかる。この問題は比較的小さいファイルを編集するときには起きないようだ。そこで、一回に送る文字列の長さを制限してみる。\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-lisp\">(\u003Cspan class=\"hljs-name\">custom-set-variables\u003C/span> &#x27;(tramp-chunksize \u003Cspan class=\"hljs-number\">1024\u003C/span>))\n\u003C/code>\u003C/pre>\n\u003Cp>数字は適当である。が、これがうまくいった。とりあえず今のところ問題は再発していない（10240はダメだった）。\u003C/p>\n\u003Cp>一応\u003Ccode>tramp-chunksize\u003C/code>をいじるのはWSL上だけに制限しておこう。WSLかどうか判定するのはこういう感じで。\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-lisp\">(\u003Cspan class=\"hljs-name\">string-match-p\u003C/span> \u003Cspan class=\"hljs-string\">&quot;Microsoft&quot;\u003C/span> (\u003Cspan class=\"hljs-name\">shell-command-to-string\u003C/span> \u003Cspan class=\"hljs-string\">&quot;uname -r&quot;\u003C/span>))\n\u003C/code>\u003C/pre>\n\u003Cp>というわけでどうにか開発環境として日常的に使えるように出来た。これがEmacsの問題だったのかtramp-modeなのかWSLなのか、よくわからない。どこかに報告したほうがいいのかもしれない。いずれにせよこれでコードが書ける。よかった。\u003C/p>\n\u003Cp>大変なこともあったけど、2017年現在、\u003Ca href=\"/mono/Windows\" class=\"monolog-link\"  title=\"Windows\">Windows\u003C/a>でやっていけそうです。しかも（一応）案外簡単に。\u003C/p>\n\u003Cfigure>\u003Cimg src=\"/images/uploads/2017/12/emacs3.png\" alt=\"\">\u003C/figure>\u003Cp>またEmacsを卒業しそびれてしまったねえ。\u003C/p>\n","この記事はEmacs Advent Calendar 2017の第8日目の記事として書かれました。第7日目はyynozkさんによる「Emacs の org-mode は表計算もできてしまう」です。第9日目はtm_tnさんによる記事の予定です。「何か書きます」とのこと。また騙されてWindowsに戻ってきてしまった。先日買ったノートパソコンはMicrosoft Surface Book 2である。性能も申し分ないし、タッチスクリーンの完成度は最高。てか267 dpiて。うちにある外付けモニタが馬鹿みたいに見えてしまって逆に困るレベルである。とは言え誤算がひとつだけあって、このサーフェスブックにはマッキントッシュは入らないらしい。これでは★一つしかつけられそうにない。インタネーットの情報では入ると聞いていたのだが、よくよく見てみるとSurface Bookの話であった。これはSurface Book 2。そのあたりで差が出たのだと思う。冗談はさておき、しかしWindowsも悪くないものだ。Windows上でEmacsユーザとしてやっていくことに関しては、もう5年以上のキャリアがある。昔はUbuntu VM (Vi",{"to":23,"one_hop_Windows":74,"one_hop_ソフトウェア":204,"one_hop_日本語":247,"one_hop_アドベントカレンダー":274,"one_hop_Emacs: まだターミナルで消耗してるの？":321},{"urlPath":8,"entities":24},[25,31,37,42,45,59],{"name":26,"nameSegmented":27,"kind":18,"urlPath":28,"tags":29,"isEmpty":30},"Windows",[26],"/mono/Windows",[],true,{"name":32,"nameSegmented":33,"kind":34,"urlPath":35,"tags":36,"isEmpty":30},"ソフトウェア",[32],"kind","/mono/%E3%82%BD%E3%83%95%E3%83%88%E3%82%A6%E3%82%A7%E3%82%A2",[],{"name":38,"nameSegmented":39,"kind":18,"urlPath":40,"tags":41,"isEmpty":30},"日本語",[38],"/mono/%E6%97%A5%E6%9C%AC%E8%AA%9E",[],{"name":15,"nameSegmented":43,"kind":18,"urlPath":19,"tags":44,"isEmpty":30},[15],[],{"name":46,"nameSegmented":47,"kind":7,"urlPath":50,"historyURL":51,"lastModified":52,"attributes":53,"tags":56,"isEmpty":58},"Emacs: まだターミナルで消耗してるの？",[48,49],"Emacs: まだターミナルで","消耗してるの？","/notes/tramp-mode","https://github.com/kissge/yo.eki.do/commits/master/notes/tramp-mode.md",["Date","2022-06-11T07:33:39.000Z"],{"from":12,"title":46,"date":54,"tags":55},["Date","2015-12-04T23:00:02.000Z"],[15],[57],{"name":15,"kind":18,"urlPath":19},false,{"name":60,"nameSegmented":61,"kind":7,"urlPath":68,"historyURL":69,"lastModified":70,"attributes":71,"tags":73,"isEmpty":58},"コミット・タグを指定してその時点でのツリーだけをgit cloneしてくる",[62,63,64,65,66,67],"コミット・タグを","指定して","その","時点での","ツリーだけを","git cloneしてくる","/notes/git-only-single-commit","https://github.com/kissge/yo.eki.do/commits/master/notes/git-only-single-commit.md",["Date","2022-04-17T12:08:43.000Z"],{"from":12,"title":60,"date":72},["Date","2015-11-10T20:03:33.000Z"],[],{"urlPath":28,"entities":75},[76,89,101,118,132,155,164,177,190],{"name":77,"nameSegmented":78,"kind":81,"urlPath":82,"historyURL":83,"lastModified":84,"attributes":85,"tags":87,"isEmpty":58},"Windows 11のセットアップ",[79,80],"Windows 11の","セットアップ","memorandum","/memorandum/Windows%2011%E3%81%AE%E3%82%BB%E3%83%83%E3%83%88%E3%82%A2%E3%83%83%E3%83%97","https://github.com/kissge/yo.eki.do/commits/master/memorandum/Windows 11のセットアップ.md",["Date","2024-01-28T06:51:56.000Z"],{"tags":86},[26],[88],{"name":26,"kind":18,"urlPath":28},{"name":90,"nameSegmented":91,"kind":7,"urlPath":94,"historyURL":95,"lastModified":96,"attributes":97,"tags":100,"isEmpty":58},"VAIO SX12 ALL BLACK EDITIONを買った",[92,93],"VAIO SX12 ALL BLACK EDITIONを","買った","/notes/vaio-sx12","https://github.com/kissge/yo.eki.do/commits/master/notes/vaio-sx12.md",["Date","2022-12-03T14:52:44.000Z"],{"title":90,"date":98,"header":99},["Date","2022-12-03T14:01:38.000Z"],"https://vaio.com/products/allblack_sx12/images/img_main.png",[],{"name":102,"nameSegmented":103,"kind":7,"urlPath":104,"historyURL":105,"lastModified":106,"attributes":107,"tags":113,"isEmpty":58},"Introduction to Legal NLP",[102],"/notes/lnlp","https://github.com/kissge/yo.eki.do/commits/master/notes/lnlp.md",["Date","2023-03-04T14:34:01.000Z"],{"title":102,"date":108,"lang":109,"slides":30,"tags":110},["Date","2022-09-04T03:30:00.000Z"],"en",[111,112],"NLP","LegalTech",[114,116],{"name":111,"kind":18,"urlPath":115},"/mono/NLP",{"name":112,"kind":18,"urlPath":117},"/mono/LegalTech",{"name":119,"nameSegmented":120,"kind":7,"urlPath":125,"historyURL":126,"lastModified":127,"attributes":128,"tags":131,"isEmpty":58},"うちのHP Spectre x360 Convertible 13がなんか変",[121,122,123,124],"うちの","HP Spectre x360 Convertible 13が","なんか","変","/notes/hp-spectre-13","https://github.com/kissge/yo.eki.do/commits/master/notes/hp-spectre-13.md",["Date","2022-06-27T06:25:27.000Z"],{"title":119,"date":129,"header":130},["Date","2022-06-26T14:14:13.000Z"],"https://jp.ext.hp.com/content/dam/jp-ext-hp-com/jp/ja/ec/notebooks/personal/spectre/images/design_img_x360_13.jpg",[],{"name":133,"nameSegmented":134,"kind":7,"urlPath":149,"historyURL":150,"lastModified":151,"attributes":152,"tags":154,"isEmpty":58},"ウィンドウをドラッグしたまま画面の端にぐぐぐっと押し付けることで最大化したり画面サイズの半分の大きさに変えたりするやつをOS Xでやる",[135,136,137,138,139,140,141,142,143,144,145,146,147,148],"ウィンドウを","ドラッグしたまま画面の","端に","ぐぐ","ぐっと","押し付ける","ことで","最大化したり画面サイズの","半分の","大きさに","変えたりする","やつを","OS Xで","やる","/notes/maximize-windows-by-dragging-them-to-the-screen-edge-on-osx","https://github.com/kissge/yo.eki.do/commits/master/notes/maximize-windows-by-dragging-them-to-the-screen-edge-on-osx.md",["Date","2022-04-17T12:08:43.000Z"],{"from":12,"title":133,"date":153},["Date","2016-01-12T22:14:29.000Z"],[],{"name":156,"nameSegmented":157,"kind":7,"urlPath":158,"historyURL":159,"lastModified":160,"attributes":161,"tags":163,"isEmpty":58},"マルチブート覚書",[156],"/notes/multiboot","https://github.com/kissge/yo.eki.do/commits/master/notes/multiboot.md",["Date","2022-04-17T12:08:43.000Z"],{"from":12,"title":156,"date":162},["Date","2015-11-03T23:49:51.000Z"],[],{"name":165,"nameSegmented":166,"kind":7,"urlPath":171,"historyURL":172,"lastModified":173,"attributes":174,"tags":176,"isEmpty":58},"二段組みのPDFを読みやすく変換する",[167,168,169,170],"二段組みの","PDFを","読みやすく","変換する","/notes/2-column-pdf","https://github.com/kissge/yo.eki.do/commits/master/notes/2-column-pdf.md",["Date","2022-06-11T07:32:46.000Z"],{"from":12,"title":165,"date":175},["Date","2014-12-10T22:31:22.000Z"],[],{"name":178,"nameSegmented":179,"kind":7,"urlPath":184,"historyURL":185,"lastModified":186,"attributes":187,"tags":189,"isEmpty":58},"Cygwin/X でウィンドウをリサイズしようとすると高さが潰れてしまう",[180,135,181,182,183],"Cygwin/X で","リサイズしようとすると","高さが","潰れてしまう","/notes/window-resize","https://github.com/kissge/yo.eki.do/commits/master/notes/window-resize.md",["Date","2022-04-17T12:08:43.000Z"],{"from":12,"title":178,"date":188},["Date","2014-08-05T04:38:45.000Z"],[],{"name":191,"nameSegmented":192,"kind":7,"urlPath":198,"historyURL":199,"lastModified":200,"attributes":201,"tags":203,"isEmpty":58},"Emacs 24 でクリップボードとの連携が上手くいかなくなった",[193,194,195,196,197],"Emacs 24 で","クリップボードとの","連携が","上手く","いかなくなった","/notes/emacs24","https://github.com/kissge/yo.eki.do/commits/master/notes/emacs24.md",["Date","2022-04-17T12:14:26.000Z"],{"from":12,"title":191,"date":202},["Date","2014-07-23T22:14:19.000Z"],[],{"urlPath":35,"entities":205},[206,232],{"name":207,"nameSegmented":208,"kind":7,"urlPath":222,"historyURL":223,"lastModified":224,"attributes":225,"tags":229,"isEmpty":58},"ja-JP-u-ca-japaneseって何？ UnicodeのCLDRを読んでみよう（あるいは、JavaScriptで和暦を得る簡単なテクについて）",[209,210,211,212,213,214,215,216,217,218,219,220,221],"ja-JP-u-ca-japaneseって","何？"," Unicodeの","CLDRを","読んで","みよう","（あるいは、","JavaScriptで","和暦を","得る","簡単な","テクに","ついて）","/notes/cldr","https://github.com/kissge/yo.eki.do/commits/master/notes/cldr.md",["Date","2022-06-11T11:32:20.000Z"],{"title":207,"date":226,"tags":227},["Date","2022-02-19T02:41:00.000Z"],[228],"Unicode",[230],{"name":228,"kind":18,"urlPath":231},"/mono/Unicode",{"name":233,"nameSegmented":234,"kind":7,"urlPath":238,"historyURL":239,"lastModified":240,"attributes":241,"tags":244,"isEmpty":58},"PDFと、出版社と、私",[235,236,237],"PDFと、","出版社と、","私","/notes/pdf-publisher-and-me","https://github.com/kissge/yo.eki.do/commits/master/notes/pdf-publisher-and-me.md",["Date","2022-09-04T05:58:48.000Z"],{"title":233,"date":242,"tags":243},["Date","2021-12-23T05:00:00.000Z"],[15,112],[245,246],{"name":15,"kind":18,"urlPath":19},{"name":112,"kind":18,"urlPath":117},{"urlPath":40,"entities":248},[249,261,272,273],{"name":250,"nameSegmented":251,"kind":81,"urlPath":254,"historyURL":255,"lastModified":256,"attributes":257,"tags":259,"isEmpty":58},"リバーシブルな二字熟語",[252,253],"リバーシブルな","二字熟語","/memorandum/%E3%83%AA%E3%83%90%E3%83%BC%E3%82%B7%E3%83%96%E3%83%AB%E3%81%AA%E4%BA%8C%E5%AD%97%E7%86%9F%E8%AA%9E","https://github.com/kissge/yo.eki.do/commits/master/memorandum/リバーシブルな二字熟語.md",["Date","2024-01-28T06:51:56.000Z"],{"tags":258},[38],[260],{"name":38,"kind":18,"urlPath":40},{"name":262,"nameSegmented":263,"kind":7,"urlPath":264,"historyURL":265,"lastModified":266,"attributes":267,"tags":270,"isEmpty":58},"How do Japanese type?",[262],"/notes/how-do-japanese-type","https://github.com/kissge/yo.eki.do/commits/master/notes/how-do-japanese-type.md",["Date","2022-06-11T11:32:30.000Z"],{"title":262,"date":268,"lang":109,"tags":269},["Date","2022-05-29T01:00:00.000Z"],[38],[271],{"name":38,"kind":18,"urlPath":40},{"name":207,"nameSegmented":208,"kind":7,"urlPath":222,"historyURL":223,"lastModified":224,"attributes":225,"tags":229,"isEmpty":58},{"name":46,"nameSegmented":47,"kind":7,"urlPath":50,"historyURL":51,"lastModified":52,"attributes":53,"tags":56,"isEmpty":58},{"urlPath":19,"entities":275},[276,277,291,307,308],{"name":233,"nameSegmented":234,"kind":7,"urlPath":238,"historyURL":239,"lastModified":240,"attributes":241,"tags":244,"isEmpty":58},{"name":278,"nameSegmented":279,"kind":7,"urlPath":283,"historyURL":284,"lastModified":285,"attributes":286,"tags":289,"isEmpty":58},"リーガルリサーチシステム「Legalscape」の技術スタック2021",[280,281,282],"リーガルリサーチシステム","「Legalscape」の","技術スタック2021","/notes/legalscape-tech-stack","https://github.com/kissge/yo.eki.do/commits/master/notes/legalscape-tech-stack.md",["Date","2022-06-11T07:33:39.000Z"],{"title":278,"date":287,"tags":288},["Date","2021-12-02T00:00:00.000Z"],[15],[290],{"name":15,"kind":18,"urlPath":19},{"name":292,"nameSegmented":293,"kind":7,"urlPath":299,"historyURL":300,"lastModified":301,"attributes":302,"tags":305,"isEmpty":58},"来年こそは届いてほしいスマートグラス「Vue」",[294,295,296,297,298],"来年こそは","届いて","ほしい","スマートグラス","「Vue」","/notes/crowdfunding-vue","https://github.com/kissge/yo.eki.do/commits/master/notes/crowdfunding-vue.md",["Date","2022-06-11T07:34:19.000Z"],{"from":12,"title":292,"date":303,"tags":304},["Date","2018-12-13T00:17:07.000Z"],[15],[306],{"name":15,"kind":18,"urlPath":19},{"name":46,"nameSegmented":47,"kind":7,"urlPath":50,"historyURL":51,"lastModified":52,"attributes":53,"tags":56,"isEmpty":58},{"name":309,"nameSegmented":310,"kind":7,"urlPath":313,"historyURL":314,"lastModified":315,"attributes":316,"tags":319,"isEmpty":58},"Emacs: re-builder + foreign-regexp.elでたのしい正規表現",[311,312],"Emacs: re-builder + foreign-regexp.elでたのしい","正規表現","/notes/foreign-regexp-el","https://github.com/kissge/yo.eki.do/commits/master/notes/foreign-regexp-el.md",["Date","2022-06-11T07:52:23.000Z"],{"from":12,"title":309,"date":317,"tags":318},["Date","2014-12-19T23:30:53.000Z"],[15],[320],{"name":15,"kind":18,"urlPath":19},{"urlPath":50,"entities":322},[]],"uses":{"url":1}}]}
