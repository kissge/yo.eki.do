{"type":"data","nodes":[null,{"type":"data","data":[{"entity":1},{"name":2,"nameSegmented":3,"kind":11,"urlPath":12,"historyURL":13,"lastModified":14,"attributes":15,"tags":18,"body":19,"headline":20,"links":21,"isEmpty":28},"Elasticaの戻り値をいい感じにラップするライブラリを書いた",[4,5,6,7,8,9,10],"Elasticaの","戻り値を","いい","感じに","ラップする","ライブラリを","書いた","note","/notes/elastica-friendly-result-set","https://github.com/kissge/yo.eki.do/commits/master/notes/elastica-friendly-result-set.md",["Date","2022-04-17T12:08:43.000Z"],{"from":16,"title":2,"date":17},"wordpress",["Date","2016-07-27T05:34:31.000Z"],[],"\u003Cp>PHPでElasticSearchをあつかうときの定番ライブラリに\u003Ca href=\"https://github.com/ruflin/Elastica\">Elastica\u003C/a>というものがある。Symfonyで扱うときはこれをさらにラップした\u003Ca href=\"https://github.com/FriendsOfSymfony/FOSElasticaBundle\">FOSElasticaBundle\u003C/a>を使うとよい。\u003C/p>\n\u003Cp>Elasticaの難点として、クエリを投げて帰ってくる結果が連想配列で得られるのだが、これが無駄に深いネストがあったりして地味に使いづらい。\u003C/p>\n\u003C!--more-->\n\n\u003Cpre>\u003Ccode class=\"language-php\">\u003Cspan class=\"hljs-variable\">$result\u003C/span> = \u003Cspan class=\"hljs-variable\">$index\u003C/span>-&gt;\u003Cspan class=\"hljs-title function_ invoke__\">search\u003C/span>(\u003Cspan class=\"hljs-variable\">$query\u003C/span>)-&gt;\u003Cspan class=\"hljs-title function_ invoke__\">getAggregations\u003C/span>()\n\u003C/code>\u003C/pre>\n\u003Cp>こんな感じで結果を取るとすると\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-php\">[\n    \u003Cspan class=\"hljs-string\">&#x27;interval&#x27;\u003C/span> =&gt; [\n        \u003Cspan class=\"hljs-string\">&#x27;buckets&#x27;\u003C/span> =&gt; [\n            [\n                \u003Cspan class=\"hljs-string\">&#x27;key_as_string&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-string\">&#x27;2016-05-31T15:00:00.000Z&#x27;\u003C/span>,\n                \u003Cspan class=\"hljs-string\">&#x27;key&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-number\">1464706800000\u003C/span>,\n                \u003Cspan class=\"hljs-string\">&#x27;doc_count&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-number\">1000\u003C/span>,\n                \u003Cspan class=\"hljs-string\">&#x27;editor&#x27;\u003C/span> =&gt; [\n                    \u003Cspan class=\"hljs-string\">&#x27;doc_count_error_upper_bound&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-number\">0\u003C/span>,\n                    \u003Cspan class=\"hljs-string\">&#x27;sum_other_doc_count&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-number\">0\u003C/span>,\n                    \u003Cspan class=\"hljs-string\">&#x27;buckets&#x27;\u003C/span> =&gt; [\n                        [\n                            \u003Cspan class=\"hljs-string\">&#x27;key&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-string\">&#x27;Emacs&#x27;\u003C/span>,\n                            \u003Cspan class=\"hljs-string\">&#x27;doc_count&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-number\">800\u003C/span>,\n                        ],\n                        [\n                            \u003Cspan class=\"hljs-string\">&#x27;key&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-string\">&#x27;nano&#x27;\u003C/span>,\n                            \u003Cspan class=\"hljs-string\">&#x27;doc_count&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-number\">200\u003C/span>,\n                        ],\n                    ],\n                ],\n            ],\n            [\n                \u003Cspan class=\"hljs-string\">&#x27;key_as_string&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-string\">&#x27;2016-06-30T15:00:00.000Z&#x27;\u003C/span>,\n                \u003Cspan class=\"hljs-string\">&#x27;key&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-number\">1467298800000\u003C/span>,\n                \u003Cspan class=\"hljs-string\">&#x27;doc_count&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-number\">2000\u003C/span>,\n                \u003Cspan class=\"hljs-string\">&#x27;editor&#x27;\u003C/span> =&gt; [\n                    \u003Cspan class=\"hljs-string\">&#x27;doc_count_error_upper_bound&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-number\">0\u003C/span>,\n                    \u003Cspan class=\"hljs-string\">&#x27;sum_other_doc_count&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-number\">0\u003C/span>,\n                    \u003Cspan class=\"hljs-string\">&#x27;buckets&#x27;\u003C/span> =&gt; [\n                        [\n                            \u003Cspan class=\"hljs-string\">&#x27;key&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-string\">&#x27;SublimeText&#x27;\u003C/span>,\n                            \u003Cspan class=\"hljs-string\">&#x27;doc_count&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-number\">1800\u003C/span>,\n                        ],\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n\u003C/code>\u003C/pre>\n\u003Cp>こんな感じで返ってきたりするので\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-php\">\u003Cspan class=\"hljs-variable\">$result\u003C/span>[\u003Cspan class=\"hljs-string\">&#x27;interval&#x27;\u003C/span>][\u003Cspan class=\"hljs-string\">&#x27;buckets&#x27;\u003C/span>][\u003Cspan class=\"hljs-string\">&#x27;editor&#x27;\u003C/span>][\u003Cspan class=\"hljs-string\">&#x27;buckets&#x27;\u003C/span>][\u003Cspan class=\"hljs-string\">&#x27;doc_count&#x27;\u003C/span>]\n\u003C/code>\u003C/pre>\n\u003Cp>とかやって欲しいデータを取る。ちょっと指が疲れて微妙なのでこの辺をいい感じにラップするライブラリ\u003Ca href=\"https://github.com/kissge/ElasticaFriendlyResultSet\">ElasticaFriendlyResultSet\u003C/a>を書いた。\u003C/p>\n\u003Cx-script src=\"https://cdn.jsdelivr.net/github-cards/latest/widget.js\">\n\u003Cdiv class=\"github-card\" data-github=\"kissge/ElasticaFriendlyResultSet\" data-width=\"400\" data-height=\"296\" data-theme=\"medium\">\u003C/div>\n\u003C/x-script>\n\n\u003Cp>これを使うと\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-php\">\u003Cspan class=\"hljs-variable\">$result\u003C/span>-&gt;interval-&gt;editor-&gt;doc_count\n\u003C/code>\u003C/pre>\n\u003Cp>となる。\u003C/p>\n\u003Cp>……あんまり変わってないじゃん！と思うかもしれないが、これをtwigから呼ぶと\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-twig\">\u003Cspan class=\"hljs-template-variable\">{{ result[\u003Cspan class=\"hljs-string\">&#x27;interval&#x27;\u003C/span>][\u003Cspan class=\"hljs-string\">&#x27;buckets&#x27;\u003C/span>][\u003Cspan class=\"hljs-string\">&#x27;editor&#x27;\u003C/span>][\u003Cspan class=\"hljs-string\">&#x27;buckets&#x27;\u003C/span>][\u003Cspan class=\"hljs-string\">&#x27;doc_count&#x27;\u003C/span>] }}\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Cp>が\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-twig\">\u003Cspan class=\"hljs-template-variable\">{{ result.interval.editor.doc_count }}\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Cp>になったり\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-twig\">\u003Cspan class=\"hljs-template-tag\">{%\u003C/span> \u003Cspan class=\"hljs-name\">for\u003C/span> interval \u003Cspan class=\"hljs-keyword\">in\u003C/span> result[\u003Cspan class=\"hljs-string\">&#x27;interval&#x27;\u003C/span>][\u003Cspan class=\"hljs-string\">&#x27;buckets&#x27;\u003C/span>] \u003Cspan class=\"hljs-template-tag\">%}\u003C/span>\u003Cspan class=\"language-xml\">\n    \u003C/span>\u003Cspan class=\"hljs-template-tag\">{%\u003C/span> \u003Cspan class=\"hljs-name\">for\u003C/span> editor \u003Cspan class=\"hljs-keyword\">in\u003C/span> interval[\u003Cspan class=\"hljs-string\">&#x27;editor&#x27;\u003C/span>][\u003Cspan class=\"hljs-string\">&#x27;buckets&#x27;\u003C/span>] \u003Cspan class=\"hljs-template-tag\">%}\u003C/span>\u003Cspan class=\"language-xml\">\n        \u003C/span>\u003Cspan class=\"hljs-template-variable\">{{ editor[\u003Cspan class=\"hljs-string\">&#x27;key&#x27;\u003C/span>] }}\u003C/span>\u003Cspan class=\"language-xml\">: \u003C/span>\u003Cspan class=\"hljs-template-variable\">{{ editor[\u003Cspan class=\"hljs-string\">&#x27;doc_count&#x27;\u003C/span>] }}\u003C/span>\u003Cspan class=\"language-xml\">\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">br\u003C/span> /&gt;\u003C/span>\n    \u003C/span>\u003Cspan class=\"hljs-template-tag\">{%\u003C/span> \u003Cspan class=\"hljs-name\">endfor\u003C/span> \u003Cspan class=\"hljs-template-tag\">%}\u003C/span>\u003Cspan class=\"language-xml\">\n\u003C/span>\u003Cspan class=\"hljs-template-tag\">{%\u003C/span> \u003Cspan class=\"hljs-name\">endfor\u003C/span> \u003Cspan class=\"hljs-template-tag\">%}\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Cp>が\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-twig\">\u003Cspan class=\"hljs-template-tag\">{%\u003C/span> \u003Cspan class=\"hljs-name\">for\u003C/span> interval \u003Cspan class=\"hljs-keyword\">in\u003C/span> result.interval \u003Cspan class=\"hljs-template-tag\">%}\u003C/span>\u003Cspan class=\"language-xml\">\n    \u003C/span>\u003Cspan class=\"hljs-template-tag\">{%\u003C/span> \u003Cspan class=\"hljs-name\">for\u003C/span> key, editor \u003Cspan class=\"hljs-keyword\">in\u003C/span> interval.editor \u003Cspan class=\"hljs-template-tag\">%}\u003C/span>\u003Cspan class=\"language-xml\">\n        \u003C/span>\u003Cspan class=\"hljs-template-variable\">{{ key }}\u003C/span>\u003Cspan class=\"language-xml\">: \u003C/span>\u003Cspan class=\"hljs-template-variable\">{{ editor.doc_count }}\u003C/span>\u003Cspan class=\"language-xml\">\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">br\u003C/span> /&gt;\u003C/span>\n    \u003C/span>\u003Cspan class=\"hljs-template-tag\">{%\u003C/span> \u003Cspan class=\"hljs-name\">endfor\u003C/span> \u003Cspan class=\"hljs-template-tag\">%}\u003C/span>\u003Cspan class=\"language-xml\">\n\u003C/span>\u003Cspan class=\"hljs-template-tag\">{%\u003C/span> \u003Cspan class=\"hljs-name\">endfor\u003C/span> \u003Cspan class=\"hljs-template-tag\">%}\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Cp>になったら嬉しくないですか？\u003C/p>\n\u003Cp>ついでに今回練習を兼ねて\u003Ca href=\"https://travis-ci.org/kissge/ElasticaFriendlyResultSet\">Travis CI\u003C/a>での自動テスト、\u003Ca href=\"https://coveralls.io/github/kissge/ElasticaFriendlyResultSet\">Coveralls\u003C/a>でのカバレッジレポートとかいろいろ遊んだ。なんか表示がぶっ壊れてるけど。テスト初心者だけど、カバレッジ可視化はモチベーションにつながって良いことだと思う。passing &amp; 100%のGitHubドヤ顔緑バッジ……もなんか出てないけど（GitHubがキャッシュするから？）。\u003C/p>\n\u003Cfigure>\u003Cimg src=\"/images/uploads/2016/07/Screenshot-2016-07-27-05.27.17.png\" alt=\"図\">\u003C/figure>\u003Cp>ついでに\u003Ca href=\"https://packagist.org\">Packagist\u003C/a>にも\u003Ca href=\"https://packagist.org/packages/kissge/elastica-friendly-result-set\">登録した\u003C/a>ので\u003C/p>\n\u003Cpre>\u003Ccode class=\"language-sh\">composer require kissge/elastica-friendly-result-set\n\u003C/code>\u003C/pre>\n\u003Cp>だけでインストールできるようになった。登録は一瞬で済んだ。\u003C/p>\n","PHPでElasticSearchをあつかうときの定番ライブラリにElasticaというものがある。Symfonyで扱うときはこれをさらにラップしたFOSElasticaBundleを使うとよい。Elasticaの難点として、クエリを投げて帰ってくる結果が連想配列で得られるのだが、これが無駄に深いネストがあったりして地味に使いづらい。$result = $index-&gt;search($query)-&gt;getAggregations()こんな感じで結果を取るとすると[    &#x27;interval&#x27; =&gt; [        &#x27;buckets&#x27; =&gt; [            [                &#x27;key_as_string&#x27; =&gt; &#x27;2016-05-31T15:00:00.000Z&#x27;,                 &#x27;key&#x27; =&gt; 1464706800000,                 &#x27;doc_count&#x27; =&gt; 1000,   ",{"to":22,"from":24,"kind":26},{"urlPath":12,"entities":23},[],{"urlPath":12,"entities":25},[],{"urlPath":12,"entities":27},[],false],"uses":{"url":1}}]}
